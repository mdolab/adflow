<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><a name="eintarray_spatial_d"></a><a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!        Generated by TAPENADE     (INRIA, Tropics team)</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!  Tapenade 3.4 (r3375) - 10 Feb 2010 15:08</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!  Differentiation of eintarray in forward (tangent) mode:</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!   variations   of useful results: eint</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!   with respect to varying inputs: cv0 *cptrange *cpeint *(*cptempfit.constants)</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!                *cptempfit.eint0 cvn rgas tref gammaconstant k</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!                p rho</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="comment">!      ==================================================================</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">EINTARRAY_SPATIAL_D</code>(<code class="vardecl">rho</code>, <code class="vardecl">rhod</code>, <code class="vardecl">p</code>, <code class="vardecl">pd</code>, <code class="vardecl">k</code>, <code class="vardecl">kd</code>, <code class="vardecl">eint</code>, <code class="vardecl">eintd</code>, <code class="label">&</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="label">&  </code><code class="vardecl">correctfork</code>, <code class="vardecl">kk</code>)</a>
  <a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">USE </code><code class="funcname">CPCURVEFITS_SPATIAL_D</code></a>
  <a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">USE </code><code class="funcname">INPUTPHYSICS_SPATIAL_D</code></a>
  <a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">USE </code><code class="funcname">CONSTANTS_SPATIAL_D</code></a>
<a name="eintarray_spatial_di0"></a>  <a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">USE </code><code class="funcname">FLOWVARREFSTATE_SPATIAL_D</code></a>
  <a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * EintArray computes the internal energy per unit mass from the  *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * given density and pressure (and possibly turbulent energy) for *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * the given kk elements of the arrays.                           *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * For a calorically and thermally perfect gas the well-known     *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * expression is used; for only a thermally perfect gas, cp is a  *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * function of temperature, curve fits are used and a more        *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      * complex expression is obtained.                                *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!      Subroutine arguments.</code></a>
<a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="comment">!</code></a>
<a name="eintarray_spatial_di1"></a>  <a href="eintarray_p.html#eintarrayi0" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="keyword">*</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">rho</code>, <code class="vardecl">p</code>, <code class="vardecl">k</code></a>
  <a href="eintarray_p.html#eintarray" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, DIMENSION(<code class="keyword">*</code>), <code class="typename">INTENT(IN) </code>:: <code class="vardecl">rhod</code>, <code class="vardecl">pd</code>, <code class="vardecl">kd</code></a>
<a name="eintarray_spatial_di2"></a>  <a href="eintarray_p.html#eintarrayi1" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="keyword">*</code><code class="typename">)</code>, <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">eint</code></a>
<a name="eintarray_spatial_di3"></a>  <a href="eintarray_p.html#eintarray" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, DIMENSION(<code class="keyword">*</code>), <code class="typename">INTENT(OUT) </code>:: <code class="vardecl">eintd</code></a>
<a name="eintarray_spatial_di4"></a>  <a href="eintarray_p.html#eintarrayi2" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">correctfork</code></a>
  <a href="eintarray_p.html#eintarrayi3" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">kk</code></a>
<a href="eintarray_p.html#eintarrayi4" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi4" target="origFile"><code class="comment">!      Local parameter.</code></a>
<a name="eintarray_spatial_di5"></a><a href="eintarray_p.html#eintarrayi4" target="origFile"><code class="comment">!</code></a>
  <a href="eintarray_p.html#eintarrayi4" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">twothird</code>=<code class="vardecl">two</code>*<code class="vardecl">third</code></a>
<a href="eintarray_p.html#eintarrayi5" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi5" target="origFile"><code class="comment">!      Local variables.</code></a>
<a name="eintarray_spatial_di6"></a><a href="eintarray_p.html#eintarrayi5" target="origFile"><code class="comment">!</code></a>
  <a href="eintarray_p.html#eintarrayi5" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">i</code>, <code class="vardecl">nn</code>, <code class="vardecl">mm</code>, <code class="vardecl">ii</code>, <code class="vardecl">start</code></a>
  <a href="eintarray_p.html#eintarrayi6" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">ovgm1</code>, <code class="vardecl">factk</code>, <code class="vardecl">pp</code>, <code class="vardecl">t</code>, <code class="vardecl">t2</code>, <code class="vardecl">scale</code></a>
<a name="eintarray_spatial_di7"></a>  <a href="eintarray_p.html#eintarray" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">ppd</code>, <code class="vardecl">td</code>, <code class="vardecl">t2d</code></a>
  <a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">LOG</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!      * Begin execution                                                *</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">!</code></a>
<a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="comment">! Determine the cp model used in the computation.</code></a>
<a name="eintarray_spatial_di8"></a>  <a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="keyword">SELECT CASE </code> (cpmodel) </a>
  <a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="keyword">CASE </code>(cpconstant) </a>
<a href="eintarray_p.html#eintarrayi8" target="origFile"><code class="comment">! Abbreviate 1/(gamma -1) a bit easier.</code></a>
<a name="eintarray_spatial_di9"></a>    <a href="eintarray_p.html#eintarrayi8" target="origFile">ovgm1 = one/(gammaconstant-one)</a>
    <a href="eintarray_p.html#eintarrayi7" target="origFile">eintd = <code class="constant">0.0</code></a>
<a href="eintarray_p.html#eintarrayi9" target="origFile"><code class="comment">! Loop over the number of elements of the array and compute</code></a>
<a name="eintarray_spatial_di10"></a><a href="eintarray_p.html#eintarrayi9" target="origFile"><code class="comment">! the total energy.</code></a>
    <a href="eintarray_p.html#eintarrayi9" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,kk</a>
      <a href="eintarray_p.html#eintarrayi10" target="origFile">eintd(i) = (ovgm1*pd(i)*rho(i)-ovgm1*p(i)*rhod(i))/rho(i)**<code class="constant">2</code></a>
<a name="eintarray_spatial_di11"></a>      <a href="eintarray_p.html#eintarrayi10" target="origFile">eint(i) = ovgm1*p(i)/rho(i)</a>
    <a href="eintarray_p.html#eintarrayi9" target="origFile"><code class="keyword">END DO</code></a>
<a href="eintarray_p.html#eintarrayi11" target="origFile"><code class="comment">! Second step. Correct the energy in case a turbulent kinetic</code></a>
<a name="eintarray_spatial_di12"></a><a href="eintarray_p.html#eintarrayi11" target="origFile"><code class="comment">! energy is present.</code></a>
<a name="eintarray_spatial_di13"></a>    <a href="eintarray_p.html#eintarrayi11" target="origFile"><code class="keyword">IF</code> (correctfork) <code class="keyword">THEN</code></a>
<a name="eintarray_spatial_di14"></a>      <a href="eintarray_p.html#eintarrayi12" target="origFile">factk = ovgm1*(five*third-gammaconstant)</a>
      <a href="eintarray_p.html#eintarrayi13" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,kk</a>
        <a href="eintarray_p.html#eintarrayi14" target="origFile">eintd(i) = eintd(i) - factk*kd(i)</a>
        <a href="eintarray_p.html#eintarrayi14" target="origFile">eint(i) = eint(i) - factk*k(i)</a>
      <a href="eintarray_p.html#eintarrayi13" target="origFile"><code class="keyword">END DO</code></a>
<a name="eintarray_spatial_di15"></a>    <a href="eintarray_p.html#eintarrayi11" target="origFile"><code class="keyword">END IF</code></a>
  <a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="keyword">CASE </code>(cptempcurvefits) </a>
<a href="eintarray_p.html#eintarrayi15" target="origFile"><code class="comment">!        ================================================================</code></a>
<a href="eintarray_p.html#eintarrayi15" target="origFile"><code class="comment">! Cp as function of the temperature is given via curve fits.</code></a>
<a href="eintarray_p.html#eintarrayi15" target="origFile"><code class="comment">! Store a scale factor to compute the nonDimensional</code></a>
<a href="eintarray_p.html#eintarrayi15" target="origFile"><code class="comment">! internal energy.</code></a>
<a name="eintarray_spatial_di16"></a>    <a href="eintarray_p.html#eintarrayi15" target="origFile">scale = rgas/tref</a>
    <a href="eintarray_p.html#eintarrayi7" target="origFile">eintd = <code class="constant">0.0</code></a>
<a name="eintarray_spatial_di17"></a><a href="eintarray_p.html#eintarrayi16" target="origFile"><code class="comment">! Loop over the number of elements of the array</code></a>
    <a href="eintarray_p.html#eintarrayi16" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,kk</a>
<a href="eintarray_p.html#eintarrayi17" target="origFile"><code class="comment">! Compute the dimensional temperature.</code></a>
<a name="eintarray_spatial_di18"></a>      <a href="eintarray_p.html#eintarrayi17" target="origFile">ppd = pd(i)</a>
<a name="eintarray_spatial_di19"></a>      <a href="eintarray_p.html#eintarrayi17" target="origFile">pp = p(i)</a>
      <a href="eintarray_p.html#eintarrayi18" target="origFile"><code class="keyword">IF</code> (correctfork) <code class="keyword">THEN</code></a>
        <a href="eintarray_p.html#eintarrayi19" target="origFile">ppd = ppd - twothird*(rhod(i)*k(i)+rho(i)*kd(i))</a>
<a name="eintarray_spatial_di20"></a>        <a href="eintarray_p.html#eintarrayi19" target="origFile">pp = pp - twothird*rho(i)*k(i)</a>
      <a href="eintarray_p.html#eintarrayi18" target="origFile"><code class="keyword">END IF</code></a>
<a name="eintarray_spatial_di21"></a>      <a href="eintarray_p.html#eintarrayi20" target="origFile">td = (tref*ppd*rgas*rho(i)-tref*pp*rgas*rhod(i))/(rgas*rho(i))**<code class="constant">2</code></a>
      <a href="eintarray_p.html#eintarrayi20" target="origFile">t = tref*pp/(rgas*rho(i))</a>
<a name="eintarray_spatial_di22"></a><a href="eintarray_p.html#eintarrayi21" target="origFile"><code class="comment">! Determine the case we are having here.</code></a>
      <a href="eintarray_p.html#eintarrayi21" target="origFile"><code class="keyword">IF</code> (t .LE. cptrange(<code class="constant">0</code>)) <code class="keyword">THEN</code></a>
<a href="eintarray_p.html#eintarrayi22" target="origFile"><code class="comment">! Temperature is less than the smallest temperature</code></a>
<a href="eintarray_p.html#eintarrayi22" target="origFile"><code class="comment">! in the curve fits. Use extrapolation using</code></a>
<a href="eintarray_p.html#eintarrayi22" target="origFile"><code class="comment">! constant cv.</code></a>
<a name="eintarray_spatial_di23"></a>        <a href="eintarray_p.html#eintarrayi22" target="origFile">eintd(i) = scale*cv0*td</a>
<a name="eintarray_spatial_di24"></a>        <a href="eintarray_p.html#eintarrayi22" target="origFile">eint(i) = scale*(cpeint(<code class="constant">0</code>)+cv0*(t-cptrange(<code class="constant">0</code>)))</a>
      <a href="eintarray_p.html#eintarrayi21" target="origFile"><code class="keyword">ELSE </code></a><a href="eintarray_p.html#eintarrayi23" target="origFile"><code class="keyword">IF</code> (t .GE. cptrange(cpnparts)) <code class="keyword">THEN</code></a>
<a href="eintarray_p.html#eintarrayi24" target="origFile"><code class="comment">! Temperature is larger than the largest temperature</code></a>
<a href="eintarray_p.html#eintarrayi24" target="origFile"><code class="comment">! in the curve fits. Use extrapolation using</code></a>
<a href="eintarray_p.html#eintarrayi24" target="origFile"><code class="comment">! constant cv.</code></a>
        <a href="eintarray_p.html#eintarrayi24" target="origFile">eintd(i) = scale*cvn*td</a>
<a name="eintarray_spatial_di25"></a>        <a href="eintarray_p.html#eintarrayi24" target="origFile">eint(i) = scale*(cpeint(cpnparts)+cvn*(t-cptrange(cpnparts)))</a>
      <a href="eintarray_p.html#eintarrayi23" target="origFile"><code class="keyword">ELSE</code></a>
<a href="eintarray_p.html#eintarrayi25" target="origFile"><code class="comment">! Temperature is in the curve fit range.</code></a>
<a name="eintarray_spatial_di26"></a><a href="eintarray_p.html#eintarrayi25" target="origFile"><code class="comment">! First find the valid range.</code></a>
<a name="eintarray_spatial_di27"></a>        <a href="eintarray_p.html#eintarrayi25" target="origFile">ii = cpnparts</a>
<a name="eintarray_spatial_di28"></a>        <a href="eintarray_p.html#eintarrayi26" target="origFile">start = <code class="constant">1</code></a>
<a href="eintarray_p.html#eintarrayi27" target="origFile"><code class="label">interval:</code><code class="keyword">DO </code></a>
<a name="eintarray_spatial_di29"></a><a href="eintarray_p.html#eintarrayi28" target="origFile"><code class="comment">! Next guess for the interval.</code></a>
          <a href="eintarray_p.html#eintarrayi28" target="origFile">nn = start + ii/<code class="constant">2</code></a>
<a name="eintarray_spatial_di30"></a><a href="eintarray_p.html#eintarrayi29" target="origFile"><code class="comment">! Determine the situation we are having here.</code></a>
          <a href="eintarray_p.html#eintarrayi29" target="origFile"><code class="keyword">IF</code> (t .GT. cptrange(nn)) <code class="keyword">THEN</code></a>
<a href="eintarray_p.html#eintarrayi30" target="origFile"><code class="comment">! Temperature is larger than the upper boundary of</code></a>
<a name="eintarray_spatial_di31"></a><a href="eintarray_p.html#eintarrayi30" target="origFile"><code class="comment">! the current interval. Update the lower boundary.</code></a>
<a name="eintarray_spatial_di32"></a>            <a href="eintarray_p.html#eintarrayi30" target="origFile">start = nn + <code class="constant">1</code></a>
            <a href="eintarray_p.html#eintarrayi31" target="origFile">ii = ii - <code class="constant">1</code></a>
          <a href="eintarray_p.html#eintarrayi29" target="origFile"><code class="keyword">ELSE </code></a><a href="eintarray_p.html#eintarrayi32" target="origFile"><code class="keyword">IF</code> (t .GE. cptrange(nn-<code class="constant">1</code>)) <code class="keyword">THEN</code></a>
<a name="eintarray_spatial_di33"></a>            <a href="eintarray_p.html#eintarrayi32" target="origFile"><code class="keyword">GOTO </code><code class="label">100</code></a>
          <a href="eintarray_p.html#eintarrayi29" target="origFile"><code class="keyword">END IF</code></a>
<a href="eintarray_p.html#eintarrayi33" target="origFile"><code class="comment">! This is the correct range. Exit the do-loop.</code></a>
<a href="eintarray_p.html#eintarrayi33" target="origFile"><code class="comment">! Modify ii for the next branch to search.</code></a>
          <a href="eintarray_p.html#eintarrayi33" target="origFile">ii = ii/<code class="constant">2</code></a>
        <a href="eintarray_p.html#eintarrayi27" target="origFile"><code class="keyword">END DO </code><code class="label">interval</code></a>
<a name="eintarray_spatial_di34"></a><a href="eintarray_p.html#eintarrayi23" target="origFile"><code class="comment">! Nn contains the correct curve fit interval.</code></a>
<a href="eintarray_p.html#eintarrayi23" target="origFile"><code class="comment">! Integrate cv to compute eint.</code></a>
<a name="eintarray_spatial_di35"></a> <a href="eintarray_p.html#eintarrayi23" target="origFile"><code class="label">100 </code></a>   <a href="eintarray_p.html#eintarrayi34" target="origFile">eintd(i) = -td</a>
<a name="p1"></a><a name="eintarray_spatial_di36"></a>        <a href="eintarray_p.html#eintarrayi34" target="origFile">eint(i) = cptempfit(nn)%eint0 - t</a>
<a name="eintarray_spatial_di37"></a>        <a href="eintarray_p.html#eintarrayi35" target="origFile"><code class="keyword">DO </code>ii=<code class="constant">1</code>,cptempfit(nn)%nterm</a>
          <a href="eintarray_p.html#eintarrayi36" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p1" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="eintarray_p.html#eintarrayi36" target="origFile">cptempfit(nn)%exponents(ii) .EQ. -<code class="constant">1_intType</code>) <code class="keyword">THEN</code></a>
            <a href="eintarray_p.html#eintarrayi37" target="origFile">eintd(i) = eintd(i) + cptempfit(nn)%constants(ii)*td/t</a>
<a name="eintarray_spatial_di38"></a>            <a href="eintarray_p.html#eintarrayi37" target="origFile">eint(i) = eint(i) + cptempfit(nn)%constants(ii)*<code class="funcname">LOG</code>(t)</a>
<a name="eintarray_spatial_di39"></a>          <a href="eintarray_p.html#eintarrayi36" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="eintarray_p.html#eintarrayi38" target="origFile">mm = cptempfit(nn)%exponents(ii) + <code class="constant">1</code></a>
            <a href="eintarray_p.html#eintarrayi39" target="origFile"><code class="keyword">IF</code> (t .GT. <code class="constant">0.0 </code>.OR. (t .LT. <code class="constant">0.0 </code>.AND. mm .EQ. <code class="funcname">INT</code>(mm))) <code class="keyword">THEN</code></a>
              <a href="eintarray_p.html#eintarrayi39" target="origFile">t2d = mm*t**(mm-<code class="constant">1</code>)*td</a>
            <a href="eintarray_p.html#eintarrayi39" target="origFile"><code class="keyword">ELSE IF</code> (t .EQ. <code class="constant">0.0 </code>.AND. mm .EQ. <code class="constant">1.0</code>) <code class="keyword">THEN</code></a>
              <a href="eintarray_p.html#eintarrayi39" target="origFile">t2d = td</a>
            <a href="eintarray_p.html#eintarrayi39" target="origFile"><code class="keyword">ELSE</code></a>
              <a href="eintarray_p.html#eintarrayi39" target="origFile">t2d = <code class="constant">0.0</code></a>
<a name="eintarray_spatial_di40"></a>            <a href="eintarray_p.html#eintarrayi39" target="origFile"><code class="keyword">END IF</code></a>
            <a href="eintarray_p.html#eintarrayi39" target="origFile">t2 = t**mm</a>
            <a href="eintarray_p.html#eintarrayi40" target="origFile">eintd(i) = eintd(i) + cptempfit(nn)%constants(ii)*t2d/mm</a>
            <a href="eintarray_p.html#eintarrayi40" target="origFile">eint(i) = eint(i) + cptempfit(nn)%constants(ii)*t2/mm</a>
<a name="eintarray_spatial_di41"></a>          <a href="eintarray_p.html#eintarrayi36" target="origFile"><code class="keyword">END IF</code></a>
        <a href="eintarray_p.html#eintarrayi35" target="origFile"><code class="keyword">END DO</code></a>
        <a href="eintarray_p.html#eintarrayi41" target="origFile">eintd(i) = scale*eintd(i)</a>
<a name="eintarray_spatial_di42"></a>        <a href="eintarray_p.html#eintarrayi41" target="origFile">eint(i) = scale*eint(i)</a>
      <a href="eintarray_p.html#eintarrayi21" target="origFile"><code class="keyword">END IF</code></a>
<a name="eintarray_spatial_di43"></a><a href="eintarray_p.html#eintarrayi42" target="origFile"><code class="comment">! Add the turbulent energy if needed.</code></a>
      <a href="eintarray_p.html#eintarrayi42" target="origFile"><code class="keyword">IF</code> (correctfork) <code class="keyword">THEN</code></a>
        <a href="eintarray_p.html#eintarrayi43" target="origFile">eintd(i) = eintd(i) + kd(i)</a>
        <a href="eintarray_p.html#eintarrayi43" target="origFile">eint(i) = eint(i) + k(i)</a>
      <a href="eintarray_p.html#eintarrayi42" target="origFile"><code class="keyword">END IF</code></a>
    <a href="eintarray_p.html#eintarrayi16" target="origFile"><code class="keyword">END DO</code></a>
  <a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="keyword">CASE DEFAULT</code></a>
    <a href="eintarray_p.html#eintarrayi7" target="origFile">eintd = <code class="constant">0.0</code></a>
  <a href="eintarray_p.html#eintarrayi7" target="origFile"><code class="keyword">END SELECT</code></a>
<a href="eintarray_p.html#eintarray" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">EINTARRAY_SPATIAL_D</code></a>
</pre>
</body>
