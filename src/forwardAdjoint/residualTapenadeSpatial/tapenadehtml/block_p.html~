<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><a name="block"></a><a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        Generated by TAPENADE     (INRIA, Tropics team)</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  Tapenade 3.4 (r3375) - 10 Feb 2010 15:08</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * File:          block.f90                                       *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Author:        Edwin van der Weide, Steve Repsher,             *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                Seonghyeon Hahn                                 *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Starting date: 12-19-2002                                      *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Last modified: 11-21-2007                                      *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">MODULE </code><code class="funcname">BLOCK</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">USE </code><code class="funcname">CONSTANTS</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * This module contains the definition of the derived data type   *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * for block, which is the basic building block for this code.    *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Apart from the derived data type for block, this module also   *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * contains the actual array for storing the blocks and the       *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * number of blocks stored on this processor.                     *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">SAVE </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! Parameters used for coarsening definition.</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">leftstarted</code>=-<code class="constant">1_porType</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">regular</code>=<code class="constant">0_porType</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">rightstarted</code>=<code class="constant">1_porType</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! Parameters used for subsonic inlet bc treatment.</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">nosubinlet</code>=<code class="constant">0_intType</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">totalconditions</code>=<code class="constant">1_intType</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">massflow</code>=<code class="constant">2_intType</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! tau(:,:,6): The 6 components of the viscous stress tensor.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!             The first 2 dimensions of these arrays are equal</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!             to the dimenions of the cell subface without any</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!             halo cell. Consequently the starting index is</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!             arbitrary, such that no offset computation is</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!             needed when the arrays are accessed.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! q(:,:,3):   Same story for the heat flux vector.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! uTau(:,:):  And for the friction velocity.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * The definition of the derived data type visc_subface_type,     *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * which stores the viscous stress tensor and heat flux vector.   *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * In this way it is avoided that these quantities must be        *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * recomputed for the viscous forces and postprocessing. This     *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * saves both time and a considerable amount of code.             *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">TYPE </code><code class="typename">VISCSUBFACETYPE</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">tau</code>, <code class="vardecl">q</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">utau</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">END TYPE </code>VISCSUBFACETYPE</a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! inBeg, inEnd: Node range in the first direction of the subface</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! jnBeg, jnEnd: Idem in the second direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! icBeg, icEnd: Cell range in the first direction of the subface</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! jcBeg, jcEnd: Idem in the second direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! norm(:,:,3):  The unit normal; it points out of the domain.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! rface(:,:):   Velocity of the face in the direction of the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               outward pointing normal. only allocated for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               the boundary conditions that need this info.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! subsonicInletTreatment: which boundary condition treatment</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         to use for subsonic inlets; either</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         totalConditions or massFlow.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! uSlip(:,:,3):  the 3 components of the velocity vector on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                a viscous wall. </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! TNS_Wall(:,:): Wall temperature for isothermal walls.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! ptInlet(:,:):       Total pressure at subsonic inlets.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! ttInlet(:,:):       Total temperature at subsonic inlets.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! htInlet(:,:):       Total enthalpy at subsonic inlets.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! flowXDirInlet(:,:): X-direction of the flow for subsonic</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                     inlets.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! flowYDirInlet(:,:): Idem in y-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! flowZDirInlet(:,:): Idem in z-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! turbInlet(:,:,nt1:nt2): Turbulence variables at inlets,</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         either subsonic or supersonic.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! rho(:,:):  density; used for multiple bc's.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! velX(:,:): x-velocity; used for multiple bc's.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! velY(:,:): y-velocity; used for multiple bc's.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! velZ(:,:): z-velocity; used for multiple bc's.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! ps(:,:):   static pressure; used for multiple bc's.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * The definition of the derived data type BCDataType, which      *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * stores the prescribed data of boundary faces as well as unit   *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * normals. For all the arrays the first two dimensions equal the *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * dimensions of the subface, possibly extended with halo cells.  *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Consequently the starting index is arbitrary, such that no     *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * offset computation is needed when the array is accessed.       *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">TYPE </code><code class="typename">BCDATATYPE</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">inbeg</code>, <code class="vardecl">inend</code>, <code class="vardecl">jnbeg</code>, <code class="vardecl">jnend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">icbeg</code>, <code class="vardecl">icend</code>, <code class="vardecl">jcbeg</code>, <code class="vardecl">jcend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">norm</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rface</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">subsonicinlettreatment</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">uslip</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">tns_wall</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ptinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ttinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">htinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">flowxdirinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">flowydirinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">flowzdirinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">turbinlet</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rho</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">velx</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">vely</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">velz</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ps</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">END TYPE </code>BCDATATYPE</a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Block dimensions and orientation.                            *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nx, ny, nz - Block integer dimensions for no halo cell based</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               quantities.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  il, jl, kl - Block integer dimensions for no halo node based</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               quantities.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  ie, je, ke - Block integer dimensions for single halo</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               cell-centered quantities.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  ib, jb, kb - Block integer dimensions for double halo</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               cell-centered quantities.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! rightHanded - Whether or not the block is a right handed.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!               If not right handed it is left handed of course.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Block boundary conditions.                                   *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nSubface             - Number of subfaces on this block.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  n1to1                - Number of 1 to 1 block boundaries.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nBocos               - Number of physical boundary subfaces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nViscBocos           - Number of viscous boundary subfaces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  BCType(:)            - Boundary condition type for each</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         subface. See the module BCTypes for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         the possibilities.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  BCFaceID(:)          - Block face location of each subface.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         possible values are: iMin, iMax, jMin,</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         jMax, kMin, kMax. see also module</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         BCTypes.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  cgnsSubface(:)       - The subface in the corresponding cgns</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         block. As cgns distinguishes between</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         boundary and internal boundaries, the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         BCType of the subface is needed to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         know which one to take.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  inBeg(:), inEnd(:)   - Lower and upper limits for the nodes</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  jnBeg(:), jnEnd(:)     in each of the index directions on a</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  knBeg(:), knEnd(:)     given subface. Note that one of these</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         indices will not change since we will</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         be moving on a face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  dinBeg(:), dinEnd(:) - Lower and upper limits for the nodes</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  djnBeg(:), djnEnd(:)   in the each of the index directions</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  dknBeg(:), dknEnd(:)   of the donor subface for this</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         particular subface. Note that one of</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         these indices will not change since we</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         will be moving on a face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  icBeg(:), icEnd(:)   - Lower and upper limits for the cells</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  jcBeg(:), jcEnd(:)     in each of the index directions for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  kcBeg(:), kcEnd(:)     the subface. The cells indicated by</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         this range are halo cells (the </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         constant index) adjacent to the face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         a possible overlap outside the block</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         is stored.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  neighBlock(:)        - Local block number to which this</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         subface connects. This value is set to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         zero if this subface is not connected</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         to another block.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  neighProc(:)         - Processor number where the neighbor</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         block is stored. This value is set to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         -1 if this subface is not connected</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         to another block.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  l1(:), l2(:),        - Short hand for the transformation</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  l3(:)                  matrix between this subface and the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         neighbor block. These values are set</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         to zero if this subface is not</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         connected to another block.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  groupNum(:)          - Group number to which this subface</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         belongs. If this subface does not</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         belong to any group, the corresponding</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         entry in this array is zeroed out. If</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         the subface belongs to a sliding mesh</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         interface the absolute value of </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         groupNum contains the number of the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         sliding mesh interface. One side of</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         the interface gets a positive number,</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         the other side a negative one.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Overset boundary (fringe) cells and blanked cells.           *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  iblank(0:Ib,0:jb,0:kb) - stores an integer for every cell of</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           this block, including halos. The</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           following convention is used:</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           + field = 1</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           + hole = 0</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           + fringe >= 9 preprocessing</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                     = 0 solver</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           + oversetOuterBound boco = -1</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           + any other boco halos = 2</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nHoles                 - number of owned hole cells.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nCellsOverset          - number of owned overset cells with</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           donors.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nCellsOversetAll       - total number of overset cells</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           including fringe from 1-to-1 halos</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           and orphans.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  nOrphans               - number of orphans (boundary cells</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           without donors).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  ibndry(3,..)           - indices for each overset cell.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  idonor(3,..)           - donor indices for each overset cell.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  overint(3,..)          - interpolants for the donor stencil.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  neighBlockOver(..)     - local block number to which donor</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           cell belongs.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  neighProcOver(..)      - processor number where the neighbor</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                           block is stored.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Boundary data for the boundary subfaces.                     *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! BCData(nBocos): The boundary data for each of the boundary</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                 subfaces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * The stress tensor and heat flux vector at viscous wall faces *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * as well as the face pointers to these viscous wall faces.    *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscSubface(nViscBocos):    Storage for the viscous stress</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             tensor and heat flux vector for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             the viscous subfaces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscIMinPointer(2:jl,2:kl): Pointer to viscous subface for </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             the iMin block face. If the face</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             is not part of a viscous subface</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             this value is set to 0.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscIMaxPointer(2:jl,2:kl): Idem for iMax block face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscJMinPointer(2:il,2:kl): Idem for jMin block face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscJMaxPointer(2:il,2:kl): Idem for jmax block face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscKMinPointer(2:il,2:jl): Idem for kMin block face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! viscKMaxPointer(2:il,2:jl): Idem for kMax block face.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Mesh related variables.                                      *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  x(0:ie,0:je,0:ke,3)  - xyz locations of grid points in block.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  xOld(nOld,:,:,:,:)   - Coordinates on older time levels;</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         only needed for unsteady problems on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         deforming grids. Only allocated on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         the finest grid level. The blank</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         dimensions are equal to the dimensions</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         of x.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  sI(0:ie,1:je,1:ke,3) - Projected areas in the i-coordinate</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         direction. Normals point in the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         direction of increasing i.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  sJ(1:ie,0:je,1:ke,3) - Projected areas in the j-coordinate</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         direction. Normals point in the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         direction of increasing j.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  sK(1:ie,1:je,0:ke,3) - Projected areas in the k-coordinate</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         direction. Normals point in the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         direction of increasing k.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  vol(0:ib,0:jb,0:kb)  - Cell volumes. The second level halo</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         is present for a multigrid option.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  volOld(nold,2:il,..) - Volumes on older time levels; only</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         needed for unsteady problems on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         deforming grids. Only allocated on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                         the finest grid level.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  porI(1:il,2:jl,2:kl) - Porosity in the i direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  porJ(2:il,1:jl,2:kl) - Porosity in the j direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  porK(2:il,2:jl,1:kl) - Porosity in the k direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  indFamilyI(:,:,:)  - Index of the i-face in the arrays</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       to compute the local mass flow</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       for a family or sliding mesh interface.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       Dimension is (1:il,2:jl,2:kl).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  indFamilyJ(:,:,:)  - Idem for the j-faces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       Dimension is (2:il,1:jl,2:kl).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  indFamilyK(:,:,:)  - Idem for the k-faces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       Dimension is (2:il,2:jl,1:kl)</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  factFamilyI(:,:,:) - Corresponding factor to make sure</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       that the massflow is defined positive</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       when it enters the block and to define</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       the mass flow of the entire wheel</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       instead of a sector. Hence the possible</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       values or -nSlices and nSlices, where</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       nSlices or the number of sections to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       obtain the full wheel.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  factFamilyJ(:,:,:) - Idem for the j-faces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  factFamilyK(:,:,:) - Idem for the k-faces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  rotMatrixI(:,:,:,:,:) - Rotation matrix of the i-faces to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          transform the velocity components</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          from Cartesian to local cylindrical.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          This is needed only for problems with</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          rotational periodicity in combination</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          with an upwind scheme.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          Dimension is (1:il,2:jl,2:kl,3,3).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  rotMatrixJ(:,:,:,:,:) - Idem for the j-faces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          Dimension is (2:il,1:jl,2:kl,3,3).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  rotMatrixK(:,:,:,:,:) - Idem for the k-faces.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          Dimension is (2:il,2:jl,1:kl,3,3).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  blockIsMoving      - Whether or not the block is moving.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  addGridVelocities  - Whether or not the face velocities</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       are allocated and set.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  sFaceI(0:ie,je,ke) - Dot product of the face velocity and</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       the normal in i-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  sFaceJ(ie,0:je,ke) - Idem in j-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!  sFaceK(ie,je,0:ke) - Idem in k-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Flow variables.                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! w(0:ib,0:jb,0:kb,1:nw)       - The set of independent variables</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                w(i,j,k,1:nwf) flow field</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                variables, which are rho, u, </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                v, w and rhoE. In other words</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                the velocities  are stored and</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                not the momentum!!!!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                w(i,j,k,nt1:nt2) turbulent </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                variables; also the primitive</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                variables are stored.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! wOld(nOld,2:il,2:jl,2:kl,nw) - Solution on older time levels,</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                needed for the time integration</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                for unsteady problems. In</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                constrast to w, the conservative</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                variables are stored in wOld for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                the flow variables; the turbulent</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                variables are always the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                primitive ones.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                Only allocated on the finest</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                mesh.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! p(0:ib,0:jb,0:kb)            - Static pressure.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! gamma(0:ib,0:jb,0:kb)        - Specific heat ratio; only</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                allocated on the finest grid.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! rlv(0:ib,0:jb,0:kb)          - Laminar viscosity; only</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                allocated on the finest mesh</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                and only for viscous problems.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! rev(0:ib,0:jb,0:kb)          - Eddy viscosity; only</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                allocated rans problems with</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                eddy viscosity models.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! s(1:ie,1:je,1:ke,3)          - Mesh velocities of the cell</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                centers; only for moving mesh</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                problems.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Residual and multigrid variables.                            *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! dw(0:ib,0:jb,0:kb,1:nw)   - Values of convective and combined</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             flow residuals. Only allocated on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             the finest mesh.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! fw(0:ib,0:jb,0:kb,1:nwf)  - values of artificial dissipation</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             and viscous residuals.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                             Only allocated on the finest mesh.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! dwOldRK(:,2:il,2:jl,2:kl,nw) - Old residuals for the time</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                accurate Runge-Kutta schemes.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                The first dimension is</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                nRKStagesUnsteady - 1.Only</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                allocated on the finest level</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                and only in unsteady mode for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                Runge-Kutta schemes.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! w1(1:ie,1:je,1:ke,1:nMGVar) - Values of the mg variables</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               upon first entry to a coarser</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               mesh; only allocated on the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               coarser grids. The variables</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               used to compute the multigrid</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               corrections are rho, u, v, w</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               and p; the rhoE value is used</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               for unsteady problems only.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! p1(1:ie,1:je,1:ke)          - Value of the pressure upon</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               first entry to a coarser grid;</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               only allocated on the coarser</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               grids.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! wr(2:il,2:jl,2:kl,1:nMGVar) - Multigrid forcing terms; only </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               allocated on the coarser grids.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               The forcing term of course</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               contains conservative residuals,</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               at least for the flow variables.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgIFine(2:il,2) - The two fine grid i-cells used for the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                   restriction of the solution and residual to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                   the coarse grid. Only on the coarser grids.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgJFine(2:jl,2) - Idem for j-cells.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgKFine(2:kl,2) - Idem for k-cells.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgIWeight(2:il) - Weight for the residual restriction in</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                   in i-direction. Value is either 0.5 or 1.0,</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                   depending whether mgIFine(,1) is equal to</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                   or differs from mgIFine(,2).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgJWeight(2:jl) - Idem for weights in j-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgKWeight(2:kl) - Idem for weights in k-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgICoarse(2:il,2) - The two coarse grid i-cells used for the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                     interpolation of the correction to the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                     fine grid. Not on the coarsest grid.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgJCoarse(2:jl,2) - Idem for j-cells.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! mgKCoarse(2:kl,2) - Idem for k-cells.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! iCoarsened - How this block was coarsened in i-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! jCoarsened - How this block was coarsened in j-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! kCoarsened - How this block was coarsened in k-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! iCo: Indicates whether or not i grid lines are present on the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      coarse grid; not allocated for the coarsest grid.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! jCo: Idem in j-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! kCo: Idem in k-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Time-stepping and spectral radii variables.                  *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * only allocated on the finest grid.                           *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! wn(2:il,2:jl,2:kl,1:nMGVar) - Values of the update variables</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               at the beginning of the RungeKutta</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               iteration. Only allocated for</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               RungeKutta smoother.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! pn(2:il,2:jl,2:kl)          - The pressure for the RungeKutta</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               smoother.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! dtl(1:ie,1:je,1:ke)         - Time step</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! radI(1:ie,1:je,1:ke)        - Spectral radius in i-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! radJ(1:ie,1:je,1:ke)        - Spectral radius in j-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! radK(1:ie,1:je,1:ke)        - Spectral radius in k-direction.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Turbulence model variables.                                  *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! d2Wall(2:il,2:jl,2:kl) - Distance from the center of the cell</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                          to the nearest viscous wall.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bmti1(je,ke,nt1:nt2,nt1:nt2): Matrix used for the implicit</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               boundary condition treatment of</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               the turbulence equations at the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               iMin boundary. Only allocated on</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               the finest level and for the 1st</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                               spectral solution.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bmti2(je,ke,nt1:nt2,nt1:nt2): Idem for the iMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bmtj1(ie,ke,nt1:nt2,nt1:nt2): Idem for the jMin boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bmtj2(ie,ke,nt1:nt2,nt1:nt2): Idem for the jMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bmtk1(ie,je,nt1:nt2,nt1:nt2): Idem for the kMin boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bmtk2(ie,je,nt1:nt2,nt1:nt2): Idem for the kMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvti1(je,ke,nt1:nt2): RHS vector used for the implicit</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       boundary condition treatment of the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       turbulence equations at the iMin</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       boundary. Only allocated on the finest</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                       level and for the 1st spectral solution.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvti2(je,ke,nt1:nt2): Idem for the iMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvtj1(ie,ke,nt1:nt2): Idem for the jMin boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvtj2(ie,ke,nt1:nt2): Idem for the jMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvti2(je,ke,nt1:nt2): Idem for the iMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvtk1(ie,ke,nt1:nt2): Idem for the kMin boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! bvtk2(ie,ke,nt1:nt2): idem for the kMax boundary.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Relation to the original cgns grid.                          *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! sectionID      - The section of the grid this block belongs to.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! cgnsBlockID    - Block/zone number of the cgns grid to which</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                  this block is related.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! iBegOr, iEndOr - Range of points of this block in the</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! jBegOr, jEndOr   corresponding cgns block, i.e. for this block</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! kBegOr, kEndOr   iBegOr <= i <= iEndOr, jBegOr <= j <= jEndOr, </code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                  kBegOr <= k <= kEndOr.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                  It is of course possible that the entire</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                  block is stored.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        * Adjoint solver variables.                                    *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        *                                                              *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!        ****************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! globalNode(ib:ie,jb:je,kb:ke):  Global node numbering.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! globalCell(0:ib,0:jb,0:kb):     Global cell numbering.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! psiAdj(ib:ie,jb:je,kb:ke,1:nw): The adjoint variables.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                 Correspond to the flow field</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                                 variables w(i,j,k,1:nw).</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * The definition of the derived data type block_type, which      *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * stores dimensions, coordinates, solution, etc.                 *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">TYPE </code><code class="typename">BLOCKTYPE</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nx</code>, <code class="vardecl">ny</code>, <code class="vardecl">nz</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">il</code>, <code class="vardecl">jl</code>, <code class="vardecl">kl</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ie</code>, <code class="vardecl">je</code>, <code class="vardecl">ke</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ib</code>, <code class="vardecl">jb</code>, <code class="vardecl">kb</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">righthanded</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nsubface</code>, <code class="vardecl">n1to1</code>, <code class="vardecl">nbocos</code>, <code class="vardecl">nviscbocos</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bctype</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bcfaceid</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">cgnssubface</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">inbeg</code>, <code class="vardecl">inend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">jnbeg</code>, <code class="vardecl">jnend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">knbeg</code>, <code class="vardecl">knend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">dinbeg</code>, <code class="vardecl">dinend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">djnbeg</code>, <code class="vardecl">djnend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">dknbeg</code>, <code class="vardecl">dknend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">icbeg</code>, <code class="vardecl">icend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">jcbeg</code>, <code class="vardecl">jcend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">kcbeg</code>, <code class="vardecl">kcend</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">neighblock</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">neighproc</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">l1</code>, <code class="vardecl">l2</code>, <code class="vardecl">l3</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">groupnum</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ncellsoverset</code>, <code class="vardecl">ncellsoversetall</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nholes</code>, <code class="vardecl">norphans</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">iblank</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ibndry</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">idonor</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">overint</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">neighblockover</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">neighprocover</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">TYPE(BCDATATYPE)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bcdata</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">TYPE(VISCSUBFACETYPE)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">viscsubface</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">visciminpointer</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">viscimaxpointer</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">viscjminpointer</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">viscjmaxpointer</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">visckminpointer</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">visckmaxpointer</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">x</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">xold</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">si</code>, <code class="vardecl">sj</code>, <code class="vardecl">sk</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">vol</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">volold</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">pori</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">porj</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">pork</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">indfamilyi</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">indfamilyj</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">indfamilyk</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">factfamilyi</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">factfamilyj</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">factfamilyk</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="label">&</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="label">&      </code><code class="vardecl">rotmatrixi</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="label">&</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="label">&      </code><code class="vardecl">rotmatrixj</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="label">&</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="label">&      </code><code class="vardecl">rotmatrixk</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">blockismoving</code>, <code class="vardecl">addgridvelocities</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">sfacei</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">sfacej</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">sfacek</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">w</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">wold</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">p</code>, <code class="vardecl">gamma</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rlv</code>, <code class="vardecl">rev</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">s</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">p1</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">dw</code>, <code class="vardecl">fw</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">dwoldrk</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">w1</code>, <code class="vardecl">wr</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgifine</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgjfine</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgkfine</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgiweight</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgjweight</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgkweight</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgicoarse</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgjcoarse</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">mgkcoarse</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">portype</code><code class="typename">) </code>:: <code class="vardecl">icoarsened</code>, <code class="vardecl">jcoarsened</code>, <code class="vardecl">kcoarsened</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">LOGICAL</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ico</code>, <code class="vardecl">jco</code>, <code class="vardecl">kco</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">wn</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">pn</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">dtl</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">radi</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">radj</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">radk</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">d2wall</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bmti1</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bmti2</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bmtj1</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bmtj2</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bmtk1</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bmtk2</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bvti1</code>, <code class="vardecl">bvti2</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bvtj1</code>, <code class="vardecl">bvtj2</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">bvtk1</code>, <code class="vardecl">bvtk2</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">cgnsblockid</code>, <code class="vardecl">sectionid</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ibegor</code>, <code class="vardecl">iendor</code>, <code class="vardecl">jbegor</code>, <code class="vardecl">jendor</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">kbegor</code>, <code class="vardecl">kendor</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">globalnode</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">globalcell</code></a>
      <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">psiadj</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">END TYPE </code>BLOCKTYPE</a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Array of all blocks at all multigrid levels and spectral sols. *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! nDom:            total number of computational blocks.</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! flowDoms(:,:,:): array of blocks. Dimensions are</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!                  (nDom,nLevels,nTimeIntervalsSpectral)</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ndom</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!Tapenade!       type(blockType), allocatable, dimension(:,:,:) :: flowDoms</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      * Additional info needed in the flow solver.                     *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      *                                                                *</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!      ******************************************************************</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">!</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="comment">! nCellGlobal(nLev) - Global number of cells on every mg level.</code></a>
  <a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="vardecl">ncellglobal</code></a>
<a href="block_spatial_d.html#block_spatial_d" target="diffFile"><code class="keyword">END MODULE </code><code class="funcname">BLOCK</code></a>
</pre>
</body>
