<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><a name="invisciddissfluxmatrixcoarse_spatial_d"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!        Generated by TAPENADE     (INRIA, Tropics team)</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!  Tapenade 3.4 (r3375) - 10 Feb 2010 15:08</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!  Differentiation of invisciddissfluxmatrixcoarse in forward (tangent) mode:</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!   variations   of useful results: *fw</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!   with respect to varying inputs: *p *gamma *w</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      * File:          inviscidDissFluxMatrixCoarse.f90                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      * Author:        Edwin van der Weide                             *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      * Starting date: 03-25-2003                                      *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      * Last modified: 08-25-2005                                      *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">INVISCIDDISSFLUXMATRIXCOARSE_SPATIAL_D</code>()</a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">USE </code><code class="funcname">INPUTPHYSICS_SPATIAL_D</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">USE </code><code class="funcname">ITERATION_SPATIAL_D</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">USE </code><code class="funcname">INPUTDISCRETIZATION_SPATIAL_D</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">USE </code><code class="funcname">CONSTANTS_SPATIAL_D</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">USE </code><code class="funcname">BLOCKPOINTERS_SPATIAL_D</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di0"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">USE </code><code class="funcname">FLOWVARREFSTATE_SPATIAL_D</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * inviscidDissFluxMatrixCoarse computes the matrix artificial    *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * dissipation term. Instead of the spectral radius, as used in   *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * the scalar dissipation scheme, the absolute value of the flux  *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * jacobian is used. This routine is used on the coarser grids in *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * the multigrid cycle and only computes the first order          *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * dissipation term. It is assumed that the pointers in           *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      * blockPointers already point to the correct block.              *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!      Local parameters.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di1"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="comment">!</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di2"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei0" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">epsacoustic</code>=<code class="constant">0.25_realType</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei1" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">epsshear</code>=<code class="constant">0.025_realType</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei2" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei2" target="origFile"><code class="comment">!      Local variables.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di3"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei2" target="origFile"><code class="comment">!</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei2" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">k</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di4"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei3" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">sfil</code>, <code class="vardecl">fis0</code>, <code class="vardecl">dis0</code>, <code class="vardecl">ppor</code>, <code class="vardecl">rrad</code>, <code class="vardecl">sface</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">rradd</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di5"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei4" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">gammaavg</code>, <code class="vardecl">gm1</code>, <code class="vardecl">ovgm1</code>, <code class="vardecl">gm53</code>, <code class="vardecl">tmp</code>, <code class="vardecl">fs</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">gammaavgd</code>, <code class="vardecl">gm1d</code>, <code class="vardecl">ovgm1d</code>, <code class="vardecl">gm53d</code>, <code class="vardecl">fsd</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di6"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei5" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">dr</code>, <code class="vardecl">dru</code>, <code class="vardecl">drv</code>, <code class="vardecl">drw</code>, <code class="vardecl">dre</code>, <code class="vardecl">drk</code>, <code class="vardecl">sx</code>, <code class="vardecl">sy</code>, <code class="vardecl">sz</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">drd</code>, <code class="vardecl">drud</code>, <code class="vardecl">drvd</code>, <code class="vardecl">drwd</code>, <code class="vardecl">dred</code>, <code class="vardecl">drkd</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di7"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei6" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">uavg</code>, <code class="vardecl">vavg</code>, <code class="vardecl">wavg</code>, <code class="vardecl">a2avg</code>, <code class="vardecl">aavg</code>, <code class="vardecl">havg</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">uavgd</code>, <code class="vardecl">vavgd</code>, <code class="vardecl">wavgd</code>, <code class="vardecl">a2avgd</code>, <code class="vardecl">aavgd</code>, <code class="vardecl">havgd</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di8"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei7" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">alphaavg</code>, <code class="vardecl">unavg</code>, <code class="vardecl">ovaavg</code>, <code class="vardecl">ova2avg</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">alphaavgd</code>, <code class="vardecl">unavgd</code>, <code class="vardecl">ovaavgd</code>, <code class="vardecl">ova2avgd</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di9"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei8" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">kavg</code>, <code class="vardecl">lam1</code>, <code class="vardecl">lam2</code>, <code class="vardecl">lam3</code>, <code class="vardecl">area</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">kavgd</code>, <code class="vardecl">lam1d</code>, <code class="vardecl">lam2d</code>, <code class="vardecl">lam3d</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di10"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei9" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">abv1</code>, <code class="vardecl">abv2</code>, <code class="vardecl">abv3</code>, <code class="vardecl">abv4</code>, <code class="vardecl">abv5</code>, <code class="vardecl">abv6</code>, <code class="vardecl">abv7</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di11"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">abv1d</code>, <code class="vardecl">abv2d</code>, <code class="vardecl">abv3d</code>, <code class="vardecl">abv4d</code>, <code class="vardecl">abv5d</code>, <code class="vardecl">abv6d</code>, <code class="vardecl">abv7d</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei10" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">correctfork</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei11" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">arg1</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">ABS</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">SQRT</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="modifier">realType</code><code class="typename">) </code>:: <code class="vardecl">max3</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di12"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="modifier">realType</code><code class="typename">) </code>:: <code class="vardecl">max2</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="typename">REAL(</code><code class="modifier">realType</code><code class="typename">) </code>:: <code class="vardecl">max1</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!      * Begin execution                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">!</code></a>
<a name="p11"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">! Check if rFil == 0. If so, the dissipative flux needs not to</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="comment">! be computed.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di13"></a>  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="keyword">IF</code> (</a><a href="msg.html#p11" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile">rfil .EQ. zero) <code class="keyword">THEN</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile">fwd = <code class="constant">0.0</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di14"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei13" target="origFile"><code class="keyword">RETURN</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="keyword">ELSE</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei14" target="origFile"><code class="comment">! Determine whether or not the total energy must be corrected</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di15"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei14" target="origFile"><code class="comment">! for the presence of the turbulent kinetic energy.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di16"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei14" target="origFile"><code class="keyword">IF</code> (kpresent) <code class="keyword">THEN</code></a>
      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei15" target="origFile"><code class="keyword">IF</code> (currentlevel .EQ. groundlevel .OR. turbcoupled) <code class="keyword">THEN</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di17"></a>        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei16" target="origFile">correctfork = <code class="constant">.true.</code></a>
      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei15" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei17" target="origFile">correctfork = <code class="constant">.false.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di18"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei15" target="origFile"><code class="keyword">END IF</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei14" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di19"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei18" target="origFile">correctfork = <code class="constant">.false.</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei14" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei19" target="origFile"><code class="comment">! Initialize sface to zero. This value will be used if the</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di20"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei19" target="origFile"><code class="comment">! block is not moving.</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei19" target="origFile">sface = zero</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di21"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei20" target="origFile"><code class="comment">! Set a couple of constants for the scheme.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di22"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei20" target="origFile">fis0 = rfil*vis2coarse</a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei21" target="origFile">sfil = one - rfil</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei22" target="origFile"><code class="comment">! Initialize the dissipative residual to a certain times,</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei22" target="origFile"><code class="comment">! possibly zero, the previously stored value. Owned cells</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di23"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei22" target="origFile"><code class="comment">! only, because the halo values do not matter.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di24"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei22" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,kl</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di25"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei23" target="origFile"><code class="keyword">DO </code>j=<code class="constant">2</code>,jl</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei24" target="origFile"><code class="keyword">DO </code>i=<code class="constant">2</code>,il</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di26"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei25" target="origFile">fwd(i, j, k, irho) = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei25" target="origFile">fw(i, j, k, irho) = sfil*fw(i, j, k, irho)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di27"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei26" target="origFile">fwd(i, j, k, imx) = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei26" target="origFile">fw(i, j, k, imx) = sfil*fw(i, j, k, imx)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di28"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei27" target="origFile">fwd(i, j, k, imy) = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei27" target="origFile">fw(i, j, k, imy) = sfil*fw(i, j, k, imy)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di29"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei28" target="origFile">fwd(i, j, k, imz) = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei28" target="origFile">fw(i, j, k, imz) = sfil*fw(i, j, k, imz)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei29" target="origFile">fwd(i, j, k, irhoe) = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei29" target="origFile">fw(i, j, k, irhoe) = sfil*fw(i, j, k, irhoe)</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei24" target="origFile"><code class="keyword">END DO</code></a>
      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei23" target="origFile"><code class="keyword">END DO</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di30"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei22" target="origFile"><code class="keyword">END DO</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile">fwd = <code class="constant">0.0</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!      * Dissipative fluxes in the i-direction.                         *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di31"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="comment">!</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di32"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,kl</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di33"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei31" target="origFile"><code class="keyword">DO </code>j=<code class="constant">2</code>,jl</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei32" target="origFile"><code class="keyword">DO </code>i=<code class="constant">1</code>,il</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di35"></a><a name="invisciddissfluxmatrixcoarse_spatial_di34"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei33" target="origFile"><code class="comment">! Compute the dissipation coefficient for this face.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di36"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei33" target="origFile">ppor = zero</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di37"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei34" target="origFile"><code class="keyword">IF</code> (pori(i, j, k) .EQ. normalflux) </a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei35" target="origFile">ppor = one</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei36" target="origFile">dis0 = fis0*ppor</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei37" target="origFile"><code class="comment">! Construct the vector of the first differences multiplied</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei37" target="origFile"><code class="comment">! by dis0.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di38"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei37" target="origFile">drd = dis0*(wd(i+<code class="constant">1</code>, j, k, irho)-wd(i, j, k, irho))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei37" target="origFile">dr = dis0*(w(i+<code class="constant">1</code>, j, k, irho)-w(i, j, k, irho))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei38" target="origFile">drud = dis0*(wd(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, ivx)+w(i+<code class="constant">1</code>, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei38" target="origFile"><code class="label">&            </code>, irho)*wd(i+<code class="constant">1</code>, j, k, ivx)-wd(i, j, k, irho)*w(i, j, k, ivx)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei38" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivx))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di39"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei38" target="origFile">dru = dis0*(w(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, ivx)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei38" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivx))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei39" target="origFile">drvd = dis0*(wd(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, ivy)+w(i+<code class="constant">1</code>, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei39" target="origFile"><code class="label">&            </code>, irho)*wd(i+<code class="constant">1</code>, j, k, ivy)-wd(i, j, k, irho)*w(i, j, k, ivy)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei39" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivy))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di40"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei39" target="origFile">drv = dis0*(w(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, ivy)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei39" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivy))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei40" target="origFile">drwd = dis0*(wd(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, ivz)+w(i+<code class="constant">1</code>, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei40" target="origFile"><code class="label">&            </code>, irho)*wd(i+<code class="constant">1</code>, j, k, ivz)-wd(i, j, k, irho)*w(i, j, k, ivz)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei40" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivz))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di41"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei40" target="origFile">drw = dis0*(w(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, ivz)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei40" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivz))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di42"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei41" target="origFile">dred = dis0*(wd(i+<code class="constant">1</code>, j, k, irhoe)-wd(i, j, k, irhoe))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei41" target="origFile">dre = dis0*(w(i+<code class="constant">1</code>, j, k, irhoe)-w(i, j, k, irhoe))</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="comment">! In case a k-equation is present, compute the difference</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="comment">! of rhok and store the average value of k. If not present,</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="comment">! set both these values to zero, such that later on no</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di43"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="comment">! decision needs to be made anymore.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="keyword">IF</code> (correctfork) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei43" target="origFile">drkd = dis0*(wd(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, itu1)+w(i+<code class="constant">1</code>, j<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei43" target="origFile"><code class="label">&              </code>, k, irho)*wd(i+<code class="constant">1</code>, j, k, itu1)-wd(i, j, k, irho)*w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei43" target="origFile"><code class="label">&              </code>, itu1)-w(i, j, k, irho)*wd(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di44"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei43" target="origFile">drk = dis0*(w(i+<code class="constant">1</code>, j, k, irho)*w(i+<code class="constant">1</code>, j, k, itu1)-w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei43" target="origFile"><code class="label">&              </code>, irho)*w(i, j, k, itu1))</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei44" target="origFile">kavgd = half*(wd(i+<code class="constant">1</code>, j, k, itu1)+wd(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di45"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei44" target="origFile">kavg = half*(w(i+<code class="constant">1</code>, j, k, itu1)+w(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di46"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei45" target="origFile">drk = zero</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei46" target="origFile">kavg = zero</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile">kavgd = <code class="constant">0.0</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di47"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile">drkd = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei42" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei47" target="origFile"><code class="comment">! Compute the average value of gamma and compute some</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei47" target="origFile"><code class="comment">! expressions in which it occurs.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di48"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei47" target="origFile">gammaavgd = half*(gammad(i+<code class="constant">1</code>, j, k)+gammad(i, j, k))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei47" target="origFile">gammaavg = half*(gamma(i+<code class="constant">1</code>, j, k)+gamma(i, j, k))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di49"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei48" target="origFile">gm1d = gammaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei48" target="origFile">gm1 = gammaavg - one</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di50"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei49" target="origFile">ovgm1d = -(one*gm1d/gm1**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei49" target="origFile">ovgm1 = one/gm1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di51"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei50" target="origFile">gm53d = gammaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei50" target="origFile">gm53 = gammaavg - five*third</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei51" target="origFile"><code class="comment">! Compute the average state at the interface.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di52"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei51" target="origFile">uavgd = half*(wd(i+<code class="constant">1</code>, j, k, ivx)+wd(i, j, k, ivx))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei51" target="origFile">uavg = half*(w(i+<code class="constant">1</code>, j, k, ivx)+w(i, j, k, ivx))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di53"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei52" target="origFile">vavgd = half*(wd(i+<code class="constant">1</code>, j, k, ivy)+wd(i, j, k, ivy))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei52" target="origFile">vavg = half*(w(i+<code class="constant">1</code>, j, k, ivy)+w(i, j, k, ivy))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di54"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei53" target="origFile">wavgd = half*(wd(i+<code class="constant">1</code>, j, k, ivz)+wd(i, j, k, ivz))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei53" target="origFile">wavg = half*(w(i+<code class="constant">1</code>, j, k, ivz)+w(i, j, k, ivz))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile">a2avgd = half*(((gammad(i+<code class="constant">1</code>, j, k)*p(i+<code class="constant">1</code>, j, k)+gamma(i+<code class="constant">1</code>, j, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile"><code class="label">&            </code>k)*pd(i+<code class="constant">1</code>, j, k))*w(i+<code class="constant">1</code>, j, k, irho)-gamma(i+<code class="constant">1</code>, j, k)*p(i+<code class="constant">1</code><code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile"><code class="label">&            </code>, j, k)*wd(i+<code class="constant">1</code>, j, k, irho))/w(i+<code class="constant">1</code>, j, k, irho)**<code class="constant">2</code>+((gammad(<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile"><code class="label">&            </code>i, j, k)*p(i, j, k)+gamma(i, j, k)*pd(i, j, k))*w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile"><code class="label">&            </code>irho)-gamma(i, j, k)*p(i, j, k)*wd(i, j, k, irho))/w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile"><code class="label">&            </code>, irho)**<code class="constant">2</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di55"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile">a2avg = half*(gamma(i+<code class="constant">1</code>, j, k)*p(i+<code class="constant">1</code>, j, k)/w(i+<code class="constant">1</code>, j, k, irho)<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di56"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei54" target="origFile"><code class="label">&            </code>+gamma(i, j, k)*p(i, j, k)/w(i, j, k, irho))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di57"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei55" target="origFile">sx = si(i, j, k, <code class="constant">1</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di58"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei56" target="origFile">sy = si(i, j, k, <code class="constant">2</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di59"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei57" target="origFile">sz = si(i, j, k, <code class="constant">3</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di60"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei58" target="origFile">arg1 = sx**<code class="constant">2 </code>+ sy**<code class="constant">2 </code>+ sz**<code class="constant">2</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di62"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei59" target="origFile">area = <code class="funcname">SQRT</code>(arg1)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei60" target="origFile"><code class="keyword">IF</code> (<code class="constant">1.e-25_realType </code>.LT. area) <code class="keyword">THEN</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di61"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei62" target="origFile">max1 = area</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei60" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di63"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei61" target="origFile">max1 = <code class="constant">1.e-25_realType</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di64"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei60" target="origFile"><code class="keyword">END IF</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di65"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei63" target="origFile">tmp = one/max1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di66"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei64" target="origFile">sx = sx*tmp</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di67"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei65" target="origFile">sy = sy*tmp</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei66" target="origFile">sz = sz*tmp</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di68"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei67" target="origFile">alphaavgd = half*(<code class="constant">2</code>*uavg*uavgd+<code class="constant">2</code>*vavg*vavgd+<code class="constant">2</code>*wavg*wavgd)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei67" target="origFile">alphaavg = half*(uavg**<code class="constant">2</code>+vavg**<code class="constant">2</code>+wavg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei68" target="origFile">havgd = alphaavgd + ovgm1d*(a2avg-gm53*kavg) + ovgm1*(a2avgd-<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di69"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei68" target="origFile"><code class="label">&            </code>gm53d*kavg-gm53*kavgd)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei68" target="origFile">havg = alphaavg + ovgm1*(a2avg-gm53*kavg)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei69" target="origFile"><code class="keyword">IF</code> (a2avg .EQ. <code class="constant">0.0</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei69" target="origFile">aavgd = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei69" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei69" target="origFile">aavgd = a2avgd/(<code class="constant">2.0</code>*<code class="funcname">SQRT</code>(a2avg))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di70"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei69" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei69" target="origFile">aavg = <code class="funcname">SQRT</code>(a2avg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di71"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei70" target="origFile">unavgd = sx*uavgd + sy*vavgd + sz*wavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei70" target="origFile">unavg = uavg*sx + vavg*sy + wavg*sz</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di72"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei71" target="origFile">ovaavgd = -(one*aavgd/aavg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei71" target="origFile">ovaavg = one/aavg</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di73"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei72" target="origFile">ova2avgd = -(one*a2avgd/a2avg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei72" target="origFile">ova2avg = one/a2avg</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di74"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei73" target="origFile"><code class="comment">! The mesh velocity if the face is moving. It must be</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di75"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei73" target="origFile"><code class="comment">! divided by the area to obtain a true velocity.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di77"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei73" target="origFile"><code class="keyword">IF</code> (addgridvelocities) </a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei74" target="origFile">sface = sfacei(i, j, k)*tmp</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei75" target="origFile"><code class="keyword">IF</code> (unavg - sface + aavg .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei77" target="origFile">lam1d = unavgd + aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di76"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei77" target="origFile">lam1 = unavg - sface + aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei75" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei76" target="origFile">lam1d = -(unavgd+aavgd)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di78"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei76" target="origFile">lam1 = -(unavg-sface+aavg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di80"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei75" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei78" target="origFile"><code class="keyword">IF</code> (unavg - sface - aavg .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei80" target="origFile">lam2d = unavgd - aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di79"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei80" target="origFile">lam2 = unavg - sface - aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei78" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei79" target="origFile">lam2d = -(unavgd-aavgd)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di81"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei79" target="origFile">lam2 = -(unavg-sface-aavg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di83"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei78" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei81" target="origFile"><code class="keyword">IF</code> (unavg - sface .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei83" target="origFile">lam3d = unavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di82"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei83" target="origFile">lam3 = unavg - sface</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei81" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei82" target="origFile">lam3d = -unavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di84"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei82" target="origFile">lam3 = -(unavg-sface)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei81" target="origFile"><code class="keyword">END IF</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di85"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei84" target="origFile">rradd = lam3d + aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di87"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei84" target="origFile">rrad = lam3 + aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei85" target="origFile"><code class="keyword">IF</code> (lam1 .LT. epsacoustic*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei87" target="origFile">lam1d = epsacoustic*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di86"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei87" target="origFile">lam1 = epsacoustic*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei85" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di88"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei86" target="origFile">lam1 = lam1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di90"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei85" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei88" target="origFile"><code class="keyword">IF</code> (lam2 .LT. epsacoustic*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei90" target="origFile">lam2d = epsacoustic*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di89"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei90" target="origFile">lam2 = epsacoustic*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei88" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di91"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei89" target="origFile">lam2 = lam2</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di93"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei88" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei91" target="origFile"><code class="keyword">IF</code> (lam3 .LT. epsshear*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei93" target="origFile">lam3d = epsshear*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di92"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei93" target="origFile">lam3 = epsshear*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei91" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di94"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei92" target="origFile">lam3 = lam3</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei91" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei94" target="origFile"><code class="comment">! Multiply the eigenvalues by the area to obtain</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei94" target="origFile"><code class="comment">! the correct values for the dissipation term.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di95"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei94" target="origFile">lam1d = area*lam1d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei94" target="origFile">lam1 = lam1*area</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di96"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei95" target="origFile">lam2d = area*lam2d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei95" target="origFile">lam2 = lam2*area</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di97"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei96" target="origFile">lam3d = area*lam3d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei96" target="origFile">lam3 = lam3*area</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei97" target="origFile"><code class="comment">! Some abbreviations, which occur quite often in the</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei97" target="origFile"><code class="comment">! dissipation terms.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di98"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei97" target="origFile">abv1d = half*(lam1d+lam2d)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei97" target="origFile">abv1 = half*(lam1+lam2)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di99"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei98" target="origFile">abv2d = half*(lam1d-lam2d)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei98" target="origFile">abv2 = half*(lam1-lam2)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di100"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei99" target="origFile">abv3d = abv1d - lam3d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei99" target="origFile">abv3 = abv1 - lam3</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei100" target="origFile">abv4d = gm1d*(alphaavg*dr-uavg*dru-vavg*drv-wavg*drw+dre) + <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei100" target="origFile"><code class="label">&            </code>gm1*(alphaavgd*dr+alphaavg*drd-uavgd*dru-uavg*drud-vavgd*drv<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei100" target="origFile"><code class="label">&            </code>-vavg*drvd-wavgd*drw-wavg*drwd+dred) - gm53d*drk - gm53*drkd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di101"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei100" target="origFile">abv4 = gm1*(alphaavg*dr-uavg*dru-vavg*drv-wavg*drw+dre) - gm53<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei100" target="origFile"><code class="label">&            </code>*drk</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di102"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei101" target="origFile">abv5d = sx*drud + sy*drvd + sz*drwd - unavgd*dr - unavg*drd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei101" target="origFile">abv5 = sx*dru + sy*drv + sz*drw - unavg*dr</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei102" target="origFile">abv6d = (abv3d*abv4+abv3*abv4d)*ova2avg + abv3*abv4*ova2avgd +<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di103"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei102" target="origFile"><code class="label">&            </code>(abv2d*abv5+abv2*abv5d)*ovaavg + abv2*abv5*ovaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei102" target="origFile">abv6 = abv3*abv4*ova2avg + abv2*abv5*ovaavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei103" target="origFile">abv7d = (abv2d*abv4+abv2*abv4d)*ovaavg + abv2*abv4*ovaavgd + <code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di104"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei103" target="origFile"><code class="label">&            </code>abv3d*abv5 + abv3*abv5d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei103" target="origFile">abv7 = abv2*abv4*ovaavg + abv3*abv5</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei104" target="origFile"><code class="comment">! Compute and scatter the dissipative flux.</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei104" target="origFile"><code class="comment">! Density.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di105"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei104" target="origFile">fsd = lam3d*dr + lam3*drd + abv6d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei104" target="origFile">fs = lam3*dr + abv6</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di106"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei105" target="origFile">fwd(i+<code class="constant">1</code>, j, k, irho) = fwd(i+<code class="constant">1</code>, j, k, irho) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei105" target="origFile">fw(i+<code class="constant">1</code>, j, k, irho) = fw(i+<code class="constant">1</code>, j, k, irho) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di107"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei106" target="origFile">fwd(i, j, k, irho) = fwd(i, j, k, irho) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei106" target="origFile">fw(i, j, k, irho) = fw(i, j, k, irho) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei107" target="origFile"><code class="comment">! X-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei107" target="origFile">fsd = lam3d*dru + lam3*drud + uavgd*abv6 + uavg*abv6d + sx*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di108"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei107" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei107" target="origFile">fs = lam3*dru + uavg*abv6 + sx*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di109"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei108" target="origFile">fwd(i+<code class="constant">1</code>, j, k, imx) = fwd(i+<code class="constant">1</code>, j, k, imx) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei108" target="origFile">fw(i+<code class="constant">1</code>, j, k, imx) = fw(i+<code class="constant">1</code>, j, k, imx) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di110"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei109" target="origFile">fwd(i, j, k, imx) = fwd(i, j, k, imx) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei109" target="origFile">fw(i, j, k, imx) = fw(i, j, k, imx) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei110" target="origFile"><code class="comment">! Y-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei110" target="origFile">fsd = lam3d*drv + lam3*drvd + vavgd*abv6 + vavg*abv6d + sy*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di111"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei110" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei110" target="origFile">fs = lam3*drv + vavg*abv6 + sy*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di112"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei111" target="origFile">fwd(i+<code class="constant">1</code>, j, k, imy) = fwd(i+<code class="constant">1</code>, j, k, imy) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei111" target="origFile">fw(i+<code class="constant">1</code>, j, k, imy) = fw(i+<code class="constant">1</code>, j, k, imy) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di113"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei112" target="origFile">fwd(i, j, k, imy) = fwd(i, j, k, imy) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei112" target="origFile">fw(i, j, k, imy) = fw(i, j, k, imy) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei113" target="origFile"><code class="comment">! Z-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei113" target="origFile">fsd = lam3d*drw + lam3*drwd + wavgd*abv6 + wavg*abv6d + sz*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di114"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei113" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei113" target="origFile">fs = lam3*drw + wavg*abv6 + sz*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di115"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei114" target="origFile">fwd(i+<code class="constant">1</code>, j, k, imz) = fwd(i+<code class="constant">1</code>, j, k, imz) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei114" target="origFile">fw(i+<code class="constant">1</code>, j, k, imz) = fw(i+<code class="constant">1</code>, j, k, imz) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di116"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei115" target="origFile">fwd(i, j, k, imz) = fwd(i, j, k, imz) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei115" target="origFile">fw(i, j, k, imz) = fw(i, j, k, imz) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei116" target="origFile"><code class="comment">! Energy.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei116" target="origFile">fsd = lam3d*dre + lam3*dred + havgd*abv6 + havg*abv6d + unavgd<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di117"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei116" target="origFile"><code class="label">&            </code>*abv7 + unavg*abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei116" target="origFile">fs = lam3*dre + havg*abv6 + unavg*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di118"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei117" target="origFile">fwd(i+<code class="constant">1</code>, j, k, irhoe) = fwd(i+<code class="constant">1</code>, j, k, irhoe) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei117" target="origFile">fw(i+<code class="constant">1</code>, j, k, irhoe) = fw(i+<code class="constant">1</code>, j, k, irhoe) + fs</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei118" target="origFile">fwd(i, j, k, irhoe) = fwd(i, j, k, irhoe) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei118" target="origFile">fw(i, j, k, irhoe) = fw(i, j, k, irhoe) - fs</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei32" target="origFile"><code class="keyword">END DO</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di119"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei31" target="origFile"><code class="keyword">END DO</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei30" target="origFile"><code class="keyword">END DO</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!      * Dissipative fluxes in the j-direction.                         *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di120"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="comment">!</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di121"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="keyword">DO </code>k=<code class="constant">2</code>,kl</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di122"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei120" target="origFile"><code class="keyword">DO </code>j=<code class="constant">1</code>,jl</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei121" target="origFile"><code class="keyword">DO </code>i=<code class="constant">2</code>,il</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di124"></a><a name="invisciddissfluxmatrixcoarse_spatial_di123"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei122" target="origFile"><code class="comment">! Compute the dissipation coefficient for this face.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di125"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei122" target="origFile">ppor = zero</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di126"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei123" target="origFile"><code class="keyword">IF</code> (porj(i, j, k) .EQ. normalflux) </a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei124" target="origFile">ppor = one</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei125" target="origFile">dis0 = fis0*ppor</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei126" target="origFile"><code class="comment">! Construct the vector of the first differences multiplied</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei126" target="origFile"><code class="comment">! by dis0.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di127"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei126" target="origFile">drd = dis0*(wd(i, j+<code class="constant">1</code>, k, irho)-wd(i, j, k, irho))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei126" target="origFile">dr = dis0*(w(i, j+<code class="constant">1</code>, k, irho)-w(i, j, k, irho))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei127" target="origFile">drud = dis0*(wd(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, ivx)+w(i, j+<code class="constant">1</code>, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei127" target="origFile"><code class="label">&            </code>, irho)*wd(i, j+<code class="constant">1</code>, k, ivx)-wd(i, j, k, irho)*w(i, j, k, ivx)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei127" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivx))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di128"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei127" target="origFile">dru = dis0*(w(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, ivx)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei127" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivx))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei128" target="origFile">drvd = dis0*(wd(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, ivy)+w(i, j+<code class="constant">1</code>, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei128" target="origFile"><code class="label">&            </code>, irho)*wd(i, j+<code class="constant">1</code>, k, ivy)-wd(i, j, k, irho)*w(i, j, k, ivy)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei128" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivy))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di129"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei128" target="origFile">drv = dis0*(w(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, ivy)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei128" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivy))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei129" target="origFile">drwd = dis0*(wd(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, ivz)+w(i, j+<code class="constant">1</code>, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei129" target="origFile"><code class="label">&            </code>, irho)*wd(i, j+<code class="constant">1</code>, k, ivz)-wd(i, j, k, irho)*w(i, j, k, ivz)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei129" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivz))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di130"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei129" target="origFile">drw = dis0*(w(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, ivz)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei129" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivz))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di131"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei130" target="origFile">dred = dis0*(wd(i, j+<code class="constant">1</code>, k, irhoe)-wd(i, j, k, irhoe))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei130" target="origFile">dre = dis0*(w(i, j+<code class="constant">1</code>, k, irhoe)-w(i, j, k, irhoe))</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="comment">! In case a k-equation is present, compute the difference</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="comment">! of rhok and store the average value of k. If not present,</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="comment">! set both these values to zero, such that later on no</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di132"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="comment">! decision needs to be made anymore.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="keyword">IF</code> (correctfork) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei132" target="origFile">drkd = dis0*(wd(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, itu1)+w(i, j+<code class="constant">1</code><code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei132" target="origFile"><code class="label">&              </code>, k, irho)*wd(i, j+<code class="constant">1</code>, k, itu1)-wd(i, j, k, irho)*w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei132" target="origFile"><code class="label">&              </code>, itu1)-w(i, j, k, irho)*wd(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di133"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei132" target="origFile">drk = dis0*(w(i, j+<code class="constant">1</code>, k, irho)*w(i, j+<code class="constant">1</code>, k, itu1)-w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei132" target="origFile"><code class="label">&              </code>, irho)*w(i, j, k, itu1))</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei133" target="origFile">kavgd = half*(wd(i, j+<code class="constant">1</code>, k, itu1)+wd(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di134"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei133" target="origFile">kavg = half*(w(i, j+<code class="constant">1</code>, k, itu1)+w(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di135"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei134" target="origFile">drk = zero</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei135" target="origFile">kavg = zero</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile">kavgd = <code class="constant">0.0</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di136"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile">drkd = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei131" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei136" target="origFile"><code class="comment">! Compute the average value of gamma and compute some</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei136" target="origFile"><code class="comment">! expressions in which it occurs.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di137"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei136" target="origFile">gammaavgd = half*(gammad(i, j+<code class="constant">1</code>, k)+gammad(i, j, k))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei136" target="origFile">gammaavg = half*(gamma(i, j+<code class="constant">1</code>, k)+gamma(i, j, k))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di138"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei137" target="origFile">gm1d = gammaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei137" target="origFile">gm1 = gammaavg - one</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di139"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei138" target="origFile">ovgm1d = -(one*gm1d/gm1**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei138" target="origFile">ovgm1 = one/gm1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di140"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei139" target="origFile">gm53d = gammaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei139" target="origFile">gm53 = gammaavg - five*third</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei140" target="origFile"><code class="comment">! Compute the average state at the interface.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di141"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei140" target="origFile">uavgd = half*(wd(i, j+<code class="constant">1</code>, k, ivx)+wd(i, j, k, ivx))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei140" target="origFile">uavg = half*(w(i, j+<code class="constant">1</code>, k, ivx)+w(i, j, k, ivx))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di142"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei141" target="origFile">vavgd = half*(wd(i, j+<code class="constant">1</code>, k, ivy)+wd(i, j, k, ivy))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei141" target="origFile">vavg = half*(w(i, j+<code class="constant">1</code>, k, ivy)+w(i, j, k, ivy))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di143"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei142" target="origFile">wavgd = half*(wd(i, j+<code class="constant">1</code>, k, ivz)+wd(i, j, k, ivz))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei142" target="origFile">wavg = half*(w(i, j+<code class="constant">1</code>, k, ivz)+w(i, j, k, ivz))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile">a2avgd = half*(((gammad(i, j+<code class="constant">1</code>, k)*p(i, j+<code class="constant">1</code>, k)+gamma(i, j+<code class="constant">1</code>, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile"><code class="label">&            </code>k)*pd(i, j+<code class="constant">1</code>, k))*w(i, j+<code class="constant">1</code>, k, irho)-gamma(i, j+<code class="constant">1</code>, k)*p(i, j<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile"><code class="label">&            </code>+<code class="constant">1</code>, k)*wd(i, j+<code class="constant">1</code>, k, irho))/w(i, j+<code class="constant">1</code>, k, irho)**<code class="constant">2</code>+((gammad(i<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile"><code class="label">&            </code>, j, k)*p(i, j, k)+gamma(i, j, k)*pd(i, j, k))*w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile"><code class="label">&            </code>irho)-gamma(i, j, k)*p(i, j, k)*wd(i, j, k, irho))/w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile"><code class="label">&            </code>, irho)**<code class="constant">2</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di144"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile">a2avg = half*(gamma(i, j+<code class="constant">1</code>, k)*p(i, j+<code class="constant">1</code>, k)/w(i, j+<code class="constant">1</code>, k, irho)<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di145"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei143" target="origFile"><code class="label">&            </code>+gamma(i, j, k)*p(i, j, k)/w(i, j, k, irho))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di146"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei144" target="origFile">sx = sj(i, j, k, <code class="constant">1</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di147"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei145" target="origFile">sy = sj(i, j, k, <code class="constant">2</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di148"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei146" target="origFile">sz = sj(i, j, k, <code class="constant">3</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di149"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei147" target="origFile">arg1 = sx**<code class="constant">2 </code>+ sy**<code class="constant">2 </code>+ sz**<code class="constant">2</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di151"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei148" target="origFile">area = <code class="funcname">SQRT</code>(arg1)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei149" target="origFile"><code class="keyword">IF</code> (<code class="constant">1.e-25_realType </code>.LT. area) <code class="keyword">THEN</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di150"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei151" target="origFile">max2 = area</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei149" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di152"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei150" target="origFile">max2 = <code class="constant">1.e-25_realType</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di153"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei149" target="origFile"><code class="keyword">END IF</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di154"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei152" target="origFile">tmp = one/max2</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di155"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei153" target="origFile">sx = sx*tmp</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di156"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei154" target="origFile">sy = sy*tmp</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei155" target="origFile">sz = sz*tmp</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di157"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei156" target="origFile">alphaavgd = half*(<code class="constant">2</code>*uavg*uavgd+<code class="constant">2</code>*vavg*vavgd+<code class="constant">2</code>*wavg*wavgd)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei156" target="origFile">alphaavg = half*(uavg**<code class="constant">2</code>+vavg**<code class="constant">2</code>+wavg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei157" target="origFile">havgd = alphaavgd + ovgm1d*(a2avg-gm53*kavg) + ovgm1*(a2avgd-<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di158"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei157" target="origFile"><code class="label">&            </code>gm53d*kavg-gm53*kavgd)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei157" target="origFile">havg = alphaavg + ovgm1*(a2avg-gm53*kavg)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei158" target="origFile"><code class="keyword">IF</code> (a2avg .EQ. <code class="constant">0.0</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei158" target="origFile">aavgd = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei158" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei158" target="origFile">aavgd = a2avgd/(<code class="constant">2.0</code>*<code class="funcname">SQRT</code>(a2avg))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di159"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei158" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei158" target="origFile">aavg = <code class="funcname">SQRT</code>(a2avg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di160"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei159" target="origFile">unavgd = sx*uavgd + sy*vavgd + sz*wavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei159" target="origFile">unavg = uavg*sx + vavg*sy + wavg*sz</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di161"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei160" target="origFile">ovaavgd = -(one*aavgd/aavg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei160" target="origFile">ovaavg = one/aavg</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di162"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei161" target="origFile">ova2avgd = -(one*a2avgd/a2avg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei161" target="origFile">ova2avg = one/a2avg</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di163"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei162" target="origFile"><code class="comment">! The mesh velocity if the face is moving. It must be</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di164"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei162" target="origFile"><code class="comment">! divided by the area to obtain a true velocity.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di166"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei162" target="origFile"><code class="keyword">IF</code> (addgridvelocities) </a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei163" target="origFile">sface = sfacej(i, j, k)*tmp</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei164" target="origFile"><code class="keyword">IF</code> (unavg - sface + aavg .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei166" target="origFile">lam1d = unavgd + aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di165"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei166" target="origFile">lam1 = unavg - sface + aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei164" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei165" target="origFile">lam1d = -(unavgd+aavgd)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di167"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei165" target="origFile">lam1 = -(unavg-sface+aavg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di169"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei164" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei167" target="origFile"><code class="keyword">IF</code> (unavg - sface - aavg .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei169" target="origFile">lam2d = unavgd - aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di168"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei169" target="origFile">lam2 = unavg - sface - aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei167" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei168" target="origFile">lam2d = -(unavgd-aavgd)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di170"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei168" target="origFile">lam2 = -(unavg-sface-aavg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di172"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei167" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei170" target="origFile"><code class="keyword">IF</code> (unavg - sface .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei172" target="origFile">lam3d = unavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di171"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei172" target="origFile">lam3 = unavg - sface</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei170" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei171" target="origFile">lam3d = -unavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di173"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei171" target="origFile">lam3 = -(unavg-sface)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei170" target="origFile"><code class="keyword">END IF</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di174"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei173" target="origFile">rradd = lam3d + aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di176"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei173" target="origFile">rrad = lam3 + aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei174" target="origFile"><code class="keyword">IF</code> (lam1 .LT. epsacoustic*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei176" target="origFile">lam1d = epsacoustic*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di175"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei176" target="origFile">lam1 = epsacoustic*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei174" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di177"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei175" target="origFile">lam1 = lam1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di179"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei174" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei177" target="origFile"><code class="keyword">IF</code> (lam2 .LT. epsacoustic*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei179" target="origFile">lam2d = epsacoustic*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di178"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei179" target="origFile">lam2 = epsacoustic*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei177" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di180"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei178" target="origFile">lam2 = lam2</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di182"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei177" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei180" target="origFile"><code class="keyword">IF</code> (lam3 .LT. epsshear*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei182" target="origFile">lam3d = epsshear*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di181"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei182" target="origFile">lam3 = epsshear*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei180" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di183"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei181" target="origFile">lam3 = lam3</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei180" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei183" target="origFile"><code class="comment">! Multiply the eigenvalues by the area to obtain</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei183" target="origFile"><code class="comment">! the correct values for the dissipation term.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di184"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei183" target="origFile">lam1d = area*lam1d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei183" target="origFile">lam1 = lam1*area</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di185"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei184" target="origFile">lam2d = area*lam2d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei184" target="origFile">lam2 = lam2*area</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di186"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei185" target="origFile">lam3d = area*lam3d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei185" target="origFile">lam3 = lam3*area</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei186" target="origFile"><code class="comment">! Some abbreviations, which occur quite often in the</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei186" target="origFile"><code class="comment">! dissipation terms.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di187"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei186" target="origFile">abv1d = half*(lam1d+lam2d)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei186" target="origFile">abv1 = half*(lam1+lam2)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di188"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei187" target="origFile">abv2d = half*(lam1d-lam2d)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei187" target="origFile">abv2 = half*(lam1-lam2)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di189"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei188" target="origFile">abv3d = abv1d - lam3d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei188" target="origFile">abv3 = abv1 - lam3</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei189" target="origFile">abv4d = gm1d*(alphaavg*dr-uavg*dru-vavg*drv-wavg*drw+dre) + <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei189" target="origFile"><code class="label">&            </code>gm1*(alphaavgd*dr+alphaavg*drd-uavgd*dru-uavg*drud-vavgd*drv<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei189" target="origFile"><code class="label">&            </code>-vavg*drvd-wavgd*drw-wavg*drwd+dred) - gm53d*drk - gm53*drkd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di190"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei189" target="origFile">abv4 = gm1*(alphaavg*dr-uavg*dru-vavg*drv-wavg*drw+dre) - gm53<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei189" target="origFile"><code class="label">&            </code>*drk</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di191"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei190" target="origFile">abv5d = sx*drud + sy*drvd + sz*drwd - unavgd*dr - unavg*drd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei190" target="origFile">abv5 = sx*dru + sy*drv + sz*drw - unavg*dr</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei191" target="origFile">abv6d = (abv3d*abv4+abv3*abv4d)*ova2avg + abv3*abv4*ova2avgd +<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di192"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei191" target="origFile"><code class="label">&            </code>(abv2d*abv5+abv2*abv5d)*ovaavg + abv2*abv5*ovaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei191" target="origFile">abv6 = abv3*abv4*ova2avg + abv2*abv5*ovaavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei192" target="origFile">abv7d = (abv2d*abv4+abv2*abv4d)*ovaavg + abv2*abv4*ovaavgd + <code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di193"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei192" target="origFile"><code class="label">&            </code>abv3d*abv5 + abv3*abv5d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei192" target="origFile">abv7 = abv2*abv4*ovaavg + abv3*abv5</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei193" target="origFile"><code class="comment">! Compute and scatter the dissipative flux.</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei193" target="origFile"><code class="comment">! Density.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di194"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei193" target="origFile">fsd = lam3d*dr + lam3*drd + abv6d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei193" target="origFile">fs = lam3*dr + abv6</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di195"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei194" target="origFile">fwd(i, j+<code class="constant">1</code>, k, irho) = fwd(i, j+<code class="constant">1</code>, k, irho) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei194" target="origFile">fw(i, j+<code class="constant">1</code>, k, irho) = fw(i, j+<code class="constant">1</code>, k, irho) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di196"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei195" target="origFile">fwd(i, j, k, irho) = fwd(i, j, k, irho) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei195" target="origFile">fw(i, j, k, irho) = fw(i, j, k, irho) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei196" target="origFile"><code class="comment">! X-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei196" target="origFile">fsd = lam3d*dru + lam3*drud + uavgd*abv6 + uavg*abv6d + sx*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di197"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei196" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei196" target="origFile">fs = lam3*dru + uavg*abv6 + sx*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di198"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei197" target="origFile">fwd(i, j+<code class="constant">1</code>, k, imx) = fwd(i, j+<code class="constant">1</code>, k, imx) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei197" target="origFile">fw(i, j+<code class="constant">1</code>, k, imx) = fw(i, j+<code class="constant">1</code>, k, imx) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di199"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei198" target="origFile">fwd(i, j, k, imx) = fwd(i, j, k, imx) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei198" target="origFile">fw(i, j, k, imx) = fw(i, j, k, imx) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei199" target="origFile"><code class="comment">! Y-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei199" target="origFile">fsd = lam3d*drv + lam3*drvd + vavgd*abv6 + vavg*abv6d + sy*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di200"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei199" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei199" target="origFile">fs = lam3*drv + vavg*abv6 + sy*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di201"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei200" target="origFile">fwd(i, j+<code class="constant">1</code>, k, imy) = fwd(i, j+<code class="constant">1</code>, k, imy) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei200" target="origFile">fw(i, j+<code class="constant">1</code>, k, imy) = fw(i, j+<code class="constant">1</code>, k, imy) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di202"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei201" target="origFile">fwd(i, j, k, imy) = fwd(i, j, k, imy) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei201" target="origFile">fw(i, j, k, imy) = fw(i, j, k, imy) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei202" target="origFile"><code class="comment">! Z-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei202" target="origFile">fsd = lam3d*drw + lam3*drwd + wavgd*abv6 + wavg*abv6d + sz*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di203"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei202" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei202" target="origFile">fs = lam3*drw + wavg*abv6 + sz*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di204"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei203" target="origFile">fwd(i, j+<code class="constant">1</code>, k, imz) = fwd(i, j+<code class="constant">1</code>, k, imz) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei203" target="origFile">fw(i, j+<code class="constant">1</code>, k, imz) = fw(i, j+<code class="constant">1</code>, k, imz) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di205"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei204" target="origFile">fwd(i, j, k, imz) = fwd(i, j, k, imz) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei204" target="origFile">fw(i, j, k, imz) = fw(i, j, k, imz) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei205" target="origFile"><code class="comment">! Energy.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei205" target="origFile">fsd = lam3d*dre + lam3*dred + havgd*abv6 + havg*abv6d + unavgd<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di206"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei205" target="origFile"><code class="label">&            </code>*abv7 + unavg*abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei205" target="origFile">fs = lam3*dre + havg*abv6 + unavg*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di207"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei206" target="origFile">fwd(i, j+<code class="constant">1</code>, k, irhoe) = fwd(i, j+<code class="constant">1</code>, k, irhoe) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei206" target="origFile">fw(i, j+<code class="constant">1</code>, k, irhoe) = fw(i, j+<code class="constant">1</code>, k, irhoe) + fs</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei207" target="origFile">fwd(i, j, k, irhoe) = fwd(i, j, k, irhoe) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei207" target="origFile">fw(i, j, k, irhoe) = fw(i, j, k, irhoe) - fs</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei121" target="origFile"><code class="keyword">END DO</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di208"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei120" target="origFile"><code class="keyword">END DO</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei119" target="origFile"><code class="keyword">END DO</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!      * Dissipative fluxes in the k-direction.                         *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di209"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="comment">!</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di210"></a>    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="keyword">DO </code>k=<code class="constant">1</code>,kl</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di211"></a>      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei209" target="origFile"><code class="keyword">DO </code>j=<code class="constant">2</code>,jl</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei210" target="origFile"><code class="keyword">DO </code>i=<code class="constant">2</code>,il</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di213"></a><a name="invisciddissfluxmatrixcoarse_spatial_di212"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei211" target="origFile"><code class="comment">! Compute the dissipation coefficient for this face.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di214"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei211" target="origFile">ppor = zero</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di215"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei212" target="origFile"><code class="keyword">IF</code> (pork(i, j, k) .EQ. normalflux) </a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei213" target="origFile">ppor = one</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei214" target="origFile">dis0 = fis0*ppor</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei215" target="origFile"><code class="comment">! Construct the vector of the first differences multiplied</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei215" target="origFile"><code class="comment">! by dis0.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di216"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei215" target="origFile">drd = dis0*(wd(i, j, k+<code class="constant">1</code>, irho)-wd(i, j, k, irho))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei215" target="origFile">dr = dis0*(w(i, j, k+<code class="constant">1</code>, irho)-w(i, j, k, irho))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei216" target="origFile">drud = dis0*(wd(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, ivx)+w(i, j, k+<code class="constant">1</code><code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei216" target="origFile"><code class="label">&            </code>, irho)*wd(i, j, k+<code class="constant">1</code>, ivx)-wd(i, j, k, irho)*w(i, j, k, ivx)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei216" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivx))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di217"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei216" target="origFile">dru = dis0*(w(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, ivx)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei216" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivx))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei217" target="origFile">drvd = dis0*(wd(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, ivy)+w(i, j, k+<code class="constant">1</code><code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei217" target="origFile"><code class="label">&            </code>, irho)*wd(i, j, k+<code class="constant">1</code>, ivy)-wd(i, j, k, irho)*w(i, j, k, ivy)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei217" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivy))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di218"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei217" target="origFile">drv = dis0*(w(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, ivy)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei217" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivy))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei218" target="origFile">drwd = dis0*(wd(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, ivz)+w(i, j, k+<code class="constant">1</code><code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei218" target="origFile"><code class="label">&            </code>, irho)*wd(i, j, k+<code class="constant">1</code>, ivz)-wd(i, j, k, irho)*w(i, j, k, ivz)<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei218" target="origFile"><code class="label">&            </code>-w(i, j, k, irho)*wd(i, j, k, ivz))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di219"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei218" target="origFile">drw = dis0*(w(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, ivz)-w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei218" target="origFile"><code class="label">&            </code>irho)*w(i, j, k, ivz))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di220"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei219" target="origFile">dred = dis0*(wd(i, j, k+<code class="constant">1</code>, irhoe)-wd(i, j, k, irhoe))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei219" target="origFile">dre = dis0*(w(i, j, k+<code class="constant">1</code>, irhoe)-w(i, j, k, irhoe))</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="comment">! In case a k-equation is present, compute the difference</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="comment">! of rhok and store the average value of k. If not present,</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="comment">! set both these values to zero, such that later on no</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di221"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="comment">! decision needs to be made anymore.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="keyword">IF</code> (correctfork) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei221" target="origFile">drkd = dis0*(wd(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, itu1)+w(i, j, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei221" target="origFile"><code class="label">&              </code>k+<code class="constant">1</code>, irho)*wd(i, j, k+<code class="constant">1</code>, itu1)-wd(i, j, k, irho)*w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei221" target="origFile"><code class="label">&              </code>, itu1)-w(i, j, k, irho)*wd(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di222"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei221" target="origFile">drk = dis0*(w(i, j, k+<code class="constant">1</code>, irho)*w(i, j, k+<code class="constant">1</code>, itu1)-w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei221" target="origFile"><code class="label">&              </code>, irho)*w(i, j, k, itu1))</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei222" target="origFile">kavgd = half*(wd(i, j, k+<code class="constant">1</code>, itu1)+wd(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di223"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei222" target="origFile">kavg = half*(w(i, j, k+<code class="constant">1</code>, itu1)+w(i, j, k, itu1))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di224"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei223" target="origFile">drk = zero</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei224" target="origFile">kavg = zero</a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile">kavgd = <code class="constant">0.0</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di225"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile">drkd = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei220" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei225" target="origFile"><code class="comment">! Compute the average value of gamma and compute some</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei225" target="origFile"><code class="comment">! expressions in which it occurs.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di226"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei225" target="origFile">gammaavgd = half*(gammad(i, j, k+<code class="constant">1</code>)+gammad(i, j, k))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei225" target="origFile">gammaavg = half*(gamma(i, j, k+<code class="constant">1</code>)+gamma(i, j, k))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di227"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei226" target="origFile">gm1d = gammaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei226" target="origFile">gm1 = gammaavg - one</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di228"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei227" target="origFile">ovgm1d = -(one*gm1d/gm1**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei227" target="origFile">ovgm1 = one/gm1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di229"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei228" target="origFile">gm53d = gammaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei228" target="origFile">gm53 = gammaavg - five*third</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei229" target="origFile"><code class="comment">! Compute the average state at the interface.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di230"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei229" target="origFile">uavgd = half*(wd(i, j, k+<code class="constant">1</code>, ivx)+wd(i, j, k, ivx))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei229" target="origFile">uavg = half*(w(i, j, k+<code class="constant">1</code>, ivx)+w(i, j, k, ivx))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di231"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei230" target="origFile">vavgd = half*(wd(i, j, k+<code class="constant">1</code>, ivy)+wd(i, j, k, ivy))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei230" target="origFile">vavg = half*(w(i, j, k+<code class="constant">1</code>, ivy)+w(i, j, k, ivy))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di232"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei231" target="origFile">wavgd = half*(wd(i, j, k+<code class="constant">1</code>, ivz)+wd(i, j, k, ivz))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei231" target="origFile">wavg = half*(w(i, j, k+<code class="constant">1</code>, ivz)+w(i, j, k, ivz))</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile">a2avgd = half*(((gammad(i, j, k+<code class="constant">1</code>)*p(i, j, k+<code class="constant">1</code>)+gamma(i, j, k+<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile"><code class="label">&            </code><code class="constant">1</code>)*pd(i, j, k+<code class="constant">1</code>))*w(i, j, k+<code class="constant">1</code>, irho)-gamma(i, j, k+<code class="constant">1</code>)*p(i, j<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile"><code class="label">&            </code>, k+<code class="constant">1</code>)*wd(i, j, k+<code class="constant">1</code>, irho))/w(i, j, k+<code class="constant">1</code>, irho)**<code class="constant">2</code>+((gammad(i<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile"><code class="label">&            </code>, j, k)*p(i, j, k)+gamma(i, j, k)*pd(i, j, k))*w(i, j, k, <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile"><code class="label">&            </code>irho)-gamma(i, j, k)*p(i, j, k)*wd(i, j, k, irho))/w(i, j, k<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile"><code class="label">&            </code>, irho)**<code class="constant">2</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di233"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile">a2avg = half*(gamma(i, j, k+<code class="constant">1</code>)*p(i, j, k+<code class="constant">1</code>)/w(i, j, k+<code class="constant">1</code>, irho)<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di234"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei232" target="origFile"><code class="label">&            </code>+gamma(i, j, k)*p(i, j, k)/w(i, j, k, irho))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di235"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei233" target="origFile">sx = sk(i, j, k, <code class="constant">1</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di236"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei234" target="origFile">sy = sk(i, j, k, <code class="constant">2</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di237"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei235" target="origFile">sz = sk(i, j, k, <code class="constant">3</code>)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di238"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei236" target="origFile">arg1 = sx**<code class="constant">2 </code>+ sy**<code class="constant">2 </code>+ sz**<code class="constant">2</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di240"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei237" target="origFile">area = <code class="funcname">SQRT</code>(arg1)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei238" target="origFile"><code class="keyword">IF</code> (<code class="constant">1.e-25_realType </code>.LT. area) <code class="keyword">THEN</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di239"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei240" target="origFile">max3 = area</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei238" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di241"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei239" target="origFile">max3 = <code class="constant">1.e-25_realType</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di242"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei238" target="origFile"><code class="keyword">END IF</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di243"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei241" target="origFile">tmp = one/max3</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di244"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei242" target="origFile">sx = sx*tmp</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di245"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei243" target="origFile">sy = sy*tmp</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei244" target="origFile">sz = sz*tmp</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di246"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei245" target="origFile">alphaavgd = half*(<code class="constant">2</code>*uavg*uavgd+<code class="constant">2</code>*vavg*vavgd+<code class="constant">2</code>*wavg*wavgd)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei245" target="origFile">alphaavg = half*(uavg**<code class="constant">2</code>+vavg**<code class="constant">2</code>+wavg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei246" target="origFile">havgd = alphaavgd + ovgm1d*(a2avg-gm53*kavg) + ovgm1*(a2avgd-<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di247"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei246" target="origFile"><code class="label">&            </code>gm53d*kavg-gm53*kavgd)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei246" target="origFile">havg = alphaavg + ovgm1*(a2avg-gm53*kavg)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei247" target="origFile"><code class="keyword">IF</code> (a2avg .EQ. <code class="constant">0.0</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei247" target="origFile">aavgd = <code class="constant">0.0</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei247" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei247" target="origFile">aavgd = a2avgd/(<code class="constant">2.0</code>*<code class="funcname">SQRT</code>(a2avg))</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di248"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei247" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei247" target="origFile">aavg = <code class="funcname">SQRT</code>(a2avg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di249"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei248" target="origFile">unavgd = sx*uavgd + sy*vavgd + sz*wavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei248" target="origFile">unavg = uavg*sx + vavg*sy + wavg*sz</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di250"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei249" target="origFile">ovaavgd = -(one*aavgd/aavg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei249" target="origFile">ovaavg = one/aavg</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di251"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei250" target="origFile">ova2avgd = -(one*a2avgd/a2avg**<code class="constant">2</code>)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei250" target="origFile">ova2avg = one/a2avg</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di252"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei251" target="origFile"><code class="comment">! The mesh velocity if the face is moving. It must be</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di253"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei251" target="origFile"><code class="comment">! divided by the area to obtain a true velocity.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di255"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei251" target="origFile"><code class="keyword">IF</code> (addgridvelocities) </a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei252" target="origFile">sface = sfacek(i, j, k)*tmp</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei253" target="origFile"><code class="keyword">IF</code> (unavg - sface + aavg .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei255" target="origFile">lam1d = unavgd + aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di254"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei255" target="origFile">lam1 = unavg - sface + aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei253" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei254" target="origFile">lam1d = -(unavgd+aavgd)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di256"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei254" target="origFile">lam1 = -(unavg-sface+aavg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di258"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei253" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei256" target="origFile"><code class="keyword">IF</code> (unavg - sface - aavg .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei258" target="origFile">lam2d = unavgd - aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di257"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei258" target="origFile">lam2 = unavg - sface - aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei256" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei257" target="origFile">lam2d = -(unavgd-aavgd)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di259"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei257" target="origFile">lam2 = -(unavg-sface-aavg)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di261"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei256" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei259" target="origFile"><code class="keyword">IF</code> (unavg - sface .GE. <code class="constant">0.</code>) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei261" target="origFile">lam3d = unavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di260"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei261" target="origFile">lam3 = unavg - sface</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei259" target="origFile"><code class="keyword">ELSE</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei260" target="origFile">lam3d = -unavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di262"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei260" target="origFile">lam3 = -(unavg-sface)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei259" target="origFile"><code class="keyword">END IF</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di263"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei262" target="origFile">rradd = lam3d + aavgd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di265"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei262" target="origFile">rrad = lam3 + aavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei263" target="origFile"><code class="keyword">IF</code> (lam1 .LT. epsacoustic*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei265" target="origFile">lam1d = epsacoustic*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di264"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei265" target="origFile">lam1 = epsacoustic*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei263" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di266"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei264" target="origFile">lam1 = lam1</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di268"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei263" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei266" target="origFile"><code class="keyword">IF</code> (lam2 .LT. epsacoustic*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei268" target="origFile">lam2d = epsacoustic*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di267"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei268" target="origFile">lam2 = epsacoustic*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei266" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di269"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei267" target="origFile">lam2 = lam2</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di271"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei266" target="origFile"><code class="keyword">END IF</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei269" target="origFile"><code class="keyword">IF</code> (lam3 .LT. epsshear*rrad) <code class="keyword">THEN</code></a>
            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei271" target="origFile">lam3d = epsshear*rradd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di270"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei271" target="origFile">lam3 = epsshear*rrad</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei269" target="origFile"><code class="keyword">ELSE</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di272"></a>            <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei270" target="origFile">lam3 = lam3</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei269" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei272" target="origFile"><code class="comment">! Multiply the eigenvalues by the area to obtain</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei272" target="origFile"><code class="comment">! the correct values for the dissipation term.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di273"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei272" target="origFile">lam1d = area*lam1d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei272" target="origFile">lam1 = lam1*area</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di274"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei273" target="origFile">lam2d = area*lam2d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei273" target="origFile">lam2 = lam2*area</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di275"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei274" target="origFile">lam3d = area*lam3d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei274" target="origFile">lam3 = lam3*area</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei275" target="origFile"><code class="comment">! Some abbreviations, which occur quite often in the</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei275" target="origFile"><code class="comment">! dissipation terms.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di276"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei275" target="origFile">abv1d = half*(lam1d+lam2d)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei275" target="origFile">abv1 = half*(lam1+lam2)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di277"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei276" target="origFile">abv2d = half*(lam1d-lam2d)</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei276" target="origFile">abv2 = half*(lam1-lam2)</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di278"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei277" target="origFile">abv3d = abv1d - lam3d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei277" target="origFile">abv3 = abv1 - lam3</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei278" target="origFile">abv4d = gm1d*(alphaavg*dr-uavg*dru-vavg*drv-wavg*drw+dre) + <code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei278" target="origFile"><code class="label">&            </code>gm1*(alphaavgd*dr+alphaavg*drd-uavgd*dru-uavg*drud-vavgd*drv<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei278" target="origFile"><code class="label">&            </code>-vavg*drvd-wavgd*drw-wavg*drwd+dred) - gm53d*drk - gm53*drkd</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di279"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei278" target="origFile">abv4 = gm1*(alphaavg*dr-uavg*dru-vavg*drv-wavg*drw+dre) - gm53<code class="label">&</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei278" target="origFile"><code class="label">&            </code>*drk</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di280"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei279" target="origFile">abv5d = sx*drud + sy*drvd + sz*drwd - unavgd*dr - unavg*drd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei279" target="origFile">abv5 = sx*dru + sy*drv + sz*drw - unavg*dr</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei280" target="origFile">abv6d = (abv3d*abv4+abv3*abv4d)*ova2avg + abv3*abv4*ova2avgd +<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di281"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei280" target="origFile"><code class="label">&            </code>(abv2d*abv5+abv2*abv5d)*ovaavg + abv2*abv5*ovaavgd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei280" target="origFile">abv6 = abv3*abv4*ova2avg + abv2*abv5*ovaavg</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei281" target="origFile">abv7d = (abv2d*abv4+abv2*abv4d)*ovaavg + abv2*abv4*ovaavgd + <code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di282"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei281" target="origFile"><code class="label">&            </code>abv3d*abv5 + abv3*abv5d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei281" target="origFile">abv7 = abv2*abv4*ovaavg + abv3*abv5</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei282" target="origFile"><code class="comment">! Compute and scatter the dissipative flux.</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei282" target="origFile"><code class="comment">! Density.</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di283"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei282" target="origFile">fsd = lam3d*dr + lam3*drd + abv6d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei282" target="origFile">fs = lam3*dr + abv6</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di284"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei283" target="origFile">fwd(i, j, k+<code class="constant">1</code>, irho) = fwd(i, j, k+<code class="constant">1</code>, irho) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei283" target="origFile">fw(i, j, k+<code class="constant">1</code>, irho) = fw(i, j, k+<code class="constant">1</code>, irho) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di285"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei284" target="origFile">fwd(i, j, k, irho) = fwd(i, j, k, irho) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei284" target="origFile">fw(i, j, k, irho) = fw(i, j, k, irho) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei285" target="origFile"><code class="comment">! X-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei285" target="origFile">fsd = lam3d*dru + lam3*drud + uavgd*abv6 + uavg*abv6d + sx*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di286"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei285" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei285" target="origFile">fs = lam3*dru + uavg*abv6 + sx*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di287"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei286" target="origFile">fwd(i, j, k+<code class="constant">1</code>, imx) = fwd(i, j, k+<code class="constant">1</code>, imx) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei286" target="origFile">fw(i, j, k+<code class="constant">1</code>, imx) = fw(i, j, k+<code class="constant">1</code>, imx) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di288"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei287" target="origFile">fwd(i, j, k, imx) = fwd(i, j, k, imx) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei287" target="origFile">fw(i, j, k, imx) = fw(i, j, k, imx) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei288" target="origFile"><code class="comment">! Y-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei288" target="origFile">fsd = lam3d*drv + lam3*drvd + vavgd*abv6 + vavg*abv6d + sy*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di289"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei288" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei288" target="origFile">fs = lam3*drv + vavg*abv6 + sy*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di290"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei289" target="origFile">fwd(i, j, k+<code class="constant">1</code>, imy) = fwd(i, j, k+<code class="constant">1</code>, imy) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei289" target="origFile">fw(i, j, k+<code class="constant">1</code>, imy) = fw(i, j, k+<code class="constant">1</code>, imy) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di291"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei290" target="origFile">fwd(i, j, k, imy) = fwd(i, j, k, imy) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei290" target="origFile">fw(i, j, k, imy) = fw(i, j, k, imy) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei291" target="origFile"><code class="comment">! Z-momentum.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei291" target="origFile">fsd = lam3d*drw + lam3*drwd + wavgd*abv6 + wavg*abv6d + sz*<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di292"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei291" target="origFile"><code class="label">&            </code>abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei291" target="origFile">fs = lam3*drw + wavg*abv6 + sz*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di293"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei292" target="origFile">fwd(i, j, k+<code class="constant">1</code>, imz) = fwd(i, j, k+<code class="constant">1</code>, imz) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei292" target="origFile">fw(i, j, k+<code class="constant">1</code>, imz) = fw(i, j, k+<code class="constant">1</code>, imz) + fs</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di294"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei293" target="origFile">fwd(i, j, k, imz) = fwd(i, j, k, imz) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei293" target="origFile">fw(i, j, k, imz) = fw(i, j, k, imz) - fs</a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei294" target="origFile"><code class="comment">! Energy.</code></a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei294" target="origFile">fsd = lam3d*dre + lam3*dred + havgd*abv6 + havg*abv6d + unavgd<code class="label">&</code></a>
<a name="invisciddissfluxmatrixcoarse_spatial_di295"></a><a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei294" target="origFile"><code class="label">&            </code>*abv7 + unavg*abv7d</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei294" target="origFile">fs = lam3*dre + havg*abv6 + unavg*abv7</a>
<a name="invisciddissfluxmatrixcoarse_spatial_di296"></a>          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei295" target="origFile">fwd(i, j, k+<code class="constant">1</code>, irhoe) = fwd(i, j, k+<code class="constant">1</code>, irhoe) + fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei295" target="origFile">fw(i, j, k+<code class="constant">1</code>, irhoe) = fw(i, j, k+<code class="constant">1</code>, irhoe) + fs</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei296" target="origFile">fwd(i, j, k, irhoe) = fwd(i, j, k, irhoe) - fsd</a>
          <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei296" target="origFile">fw(i, j, k, irhoe) = fw(i, j, k, irhoe) - fs</a>
        <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei210" target="origFile"><code class="keyword">END DO</code></a>
      <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei209" target="origFile"><code class="keyword">END DO</code></a>
    <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei208" target="origFile"><code class="keyword">END DO</code></a>
  <a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarsei12" target="origFile"><code class="keyword">END IF</code></a>
<a href="invisciddissfluxmatrixcoarse_p.html#invisciddissfluxmatrixcoarse" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">INVISCIDDISSFLUXMATRIXCOARSE_SPATIAL_D</code></a>
</pre>
</body>
