<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><a name="cgnsgrid_spatial_d"></a><a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!        Generated by TAPENADE     (INRIA, Tropics team)</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!  Tapenade 3.4 (r3375) - 10 Feb 2010 15:08</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * File:          cgnsGrid.f90                                    *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * Author:        Edwin van der Weide, Steve Repsher,             *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                Seonghyeon Hahn                                 *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * Starting date: 12-17-2002                                      *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * Last modified: 10-29-2007                                      *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">MODULE </code><code class="funcname">CGNSGRID_SPATIAL_D</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">USE </code><code class="funcname">CONSTANTS_SPATIAL_D</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * This module contains the derived data type for storing the     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * information of the original cgns grid file. Information stored *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * is number of blocks, block sizes, zone names, etc. this info   *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * is needed again when the solution is written to file. Remember *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * that the original blocks may be split to obtain a better       *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * load balance. Note that this info is stored on all processors. *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * Apart from the derived data type for the cgns blocks, this     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * module also contains the name of the base and the physical     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * dimensions of the problem.                                     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">SAVE </code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The units in which the data is specified.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The name of the array.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of dimensions for which the data is specified.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of data points of every dimensions. upper limit is</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! three, although for BC data the maximum is usually 2.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The actual data. Assumed is that only floating point data</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! is prescribed and not integer or character data. Note that</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! dataArr is a 1D array even if the data is multi-dimensional.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived datatype to store the actual     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * data of the boundary conditions.                               *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSBCDATAARRAY</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">mass</code>, <code class="vardecl">len</code>, <code class="vardecl">time</code>, <code class="vardecl">temp</code>, <code class="vardecl">angle</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">arrayname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ndimensions</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">datadim</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">dataarr</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSBCDATAARRAY</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the dataset.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Boundary condition type.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The number of Dirichlet arrays in the data set.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The number of Neumann arrays in the data set.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The Dirichlet arrays.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsBCDataArray), pointer, dimension(:) :: dirichletArrays</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The Neumann arrays.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsBCDataArray), pointer, dimension(:) :: neumannArrays</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived datatype to store the prescribed *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * boundary data for a boundary subface.                          *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSBCDATASETTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">datasetname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">bctype</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ndirichletarrays</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nneumannarrays</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSBCDATASETTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the interface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the zone/block interfacing with the current zone/block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Zone/block ID of the zone/block interfacing with the current</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! zone/block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Range of points of this subface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Range of points for the donor block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Short hand notation defining the relative orientation of the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! two zones.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not the subface is a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The center of rotation for a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The rotation angles for a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The translation vector for a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store cgns 1 to 1   *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * block to block, i.e. continuous grid lines across block        *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * boundaries, connectivities.                                    *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNS1TO1CONNTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">connectname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">donorname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">donorblock</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ibeg</code>, <code class="vardecl">jbeg</code>, <code class="vardecl">kbeg</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">iend</code>, <code class="vardecl">jend</code>, <code class="vardecl">kend</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">dibeg</code>, <code class="vardecl">djbeg</code>, <code class="vardecl">dkbeg</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">diend</code>, <code class="vardecl">djend</code>, <code class="vardecl">dkend</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">l1</code>, <code class="vardecl">l2</code>, <code class="vardecl">l3</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">periodic</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotationcenter</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotationangles</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">translation</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNS1TO1CONNTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of donor blocks. It is possible that the subface</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! abuts multiple donor blocks.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Names of the interfaces. Dimension [nDonorBlocks].</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Names of the zone/block interfacing with the current</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! zone/block. Dimension [nDonorBlocks].</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Zone/block IDs of the zones/blocks interfacing with the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! current zone/block. Dimension [nDonorBlocks].</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Range of points of this subface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Block face IDs of the donor blocks, which abut this subface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Dimension [nDonorBlocks].</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not the subface is a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The center of rotation for a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The rotation angles for a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The translation vector for a periodic boundary.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store cgns          *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * non-matching abutting block to block connectivities.           *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSNONMATCHABUTTINGCONNTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ndonorblocks</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen), <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="label">&</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="label">&      </code><code class="vardecl">connectnames</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen), <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">donornames</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">donorblocks</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ibeg</code>, <code class="vardecl">jbeg</code>, <code class="vardecl">kbeg</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">iend</code>, <code class="vardecl">jend</code>, <code class="vardecl">kend</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">donorfaceids</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">periodic</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotationcenter</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotationangles</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">translation</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSNONMATCHABUTTINGCONNTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the interface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the zone/block interfacing with the current zone/block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Zone/block id of the zone/block interfacing with the current</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! zone/block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of points to be interpolated (should equal the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! number of points in the donor list.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Indices for this block to be interpolated.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! [dimension(3,npnts)]</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Indices for donor block that provide information.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! [dimension(3,npnts)]</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Interpolation weights for the donor stencil</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! [dimension(3,npnts)]</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store cgns overset  *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * connectivity (i.e. overlapping grids to be handled via the     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * chimera approach).                                             *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSOVERSETCONNTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">connectname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">donorname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">donorblock</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">npnts</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ibndry</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">idonor</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">interp</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSOVERSETCONNTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the interface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of points in this hole set.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Indices for the hole points.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! [dimension(3,npnts)]</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store cgns overset  *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * holes. (these points are grouped together and ignored when     *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * calculating residuals).                                        *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSHOLESTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">holename</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">npnts</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">indices</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSHOLESTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the boundary condition.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! CGNS and internal boundary condition type.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the CGNS user defined data node if the CGNS</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! boundary condition is UserDefined.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The way the boundary condition faces are specified; either</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! a point range or an individual set of points.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of points in the boundary condition set defining this</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! boundary region. For a point range this is 2.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Index vector indicating the computational coordinate</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! direction of the boundary condition patch normal.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! A flag indicating whether or not boundary normals are defined.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! normalListFlag == 0: normals are not defined.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! normalListFlag == 1: normals are defined.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Data type used for the definition of the normals. Admissible</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! types are realSingle and realDouble.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Corresponding family number. If the face does not belong to</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! a family this value is 0.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The number of the sliding mesh interface of which this</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! boco is part. 0 means that this family is not part of a</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! sliding mesh interface. This value can be positive and</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! negative in order to distinguish between the two sides of the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! interface. The absolute value is the actual ID of the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! interface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of boundary condition datasets for the current</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! boundary condition.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The actual boundary condition data sets.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsBCDatasetType), pointer, dimension(:) :: dataSet</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not I actually allocated the memory for data_set.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! It is possible that data_set points to corresponding entry</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! of a family.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The rotation center and rotation rate of the boundary face.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! It is possible that this differs from the rotation rate of</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! the corresponding block, e.g. for a casing in a</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! turbomachinery problem.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Range of points of this subface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not this subface is an actual face. Some mesh</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! generators (such as ICEM CFD hexa) include edges and points</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! as boundary conditions. These should not be considered by</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! the flow solver. in those cases, actual_face is .false.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store cgns block    *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * boundary conditions.                                           *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSBOCOTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">boconame</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">bctypecgns</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">bctype</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">userdefinedname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">ptsettype</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">npnts</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">normalindex</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">normallistflag</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">normaldatatype</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">familyid</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">slidingid</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ndataset</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">datasetallocated</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotcenter</code>, <code class="vardecl">rotrate</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ibeg</code>, <code class="vardecl">jbeg</code>, <code class="vardecl">kbeg</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">iend</code>, <code class="vardecl">jend</code>, <code class="vardecl">kend</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">actualface</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSBOCOTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!        ****************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!        *                                                              *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!        * Information read from the cgns file.                         *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!        *                                                              *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!        ****************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The type of the zone. Should be structured. Note that this</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! is an integer and not integer(kind=intType).</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Zone name for this block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The number or subblocks and the processor ID's on which they</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! are stored. Due to the possibility of splitting the block</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! during runtime, multiple processors could store a part of</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! the block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The local block ID's of the subblocks.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The corresponding nodal ranges of the subblocks.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The units in which the grid is specified.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not grid units are specified.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The conversion factor to meters for this block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Corresponding family number. If the block does not belong to</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! a family this value is 0.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Nodal block dimensions.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Cell block dimensions.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Total number of 1 to 1 block to block connectivities, i.e.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! continous grid lines, for this block. Also the number of</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! 1 to 1 connectivities stored in general connectivity nodes</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! is incorporated in n1to1.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of 1 to 1 block to block connectivities stored in</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! general connectivities.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of 1 to 1 block to block connectivities.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgns1to1ConnType), pointer, dimension(:) :: conn1to1</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of non-matching abutting block to block</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! connectivities.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of non-matching abutting block to block connectivities.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsNonMatchAbuttingConnType), pointer, dimension(:) :: &</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                                          connNonMatchAbutting</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of overset block to block connectivities, and the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! total number of overset boundary cells.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of overset block to block connectivities.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsOversetConnType), pointer, dimension(:) :: connOver</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of overset hole sets for this block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of overset hole sets.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsHolesType), pointer, dimension(:) :: hole</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of boundary conditions for this block.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of boundary conditions.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsBocoType), pointer, dimension(:) :: bocoInfo</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not a rotating frame is specified.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The corresponding rotation center and rotation rate.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store the data of a *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * cgns block.                                                    *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSBLOCKINFOTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">zonetype</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">zonename</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">nsubblocks</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">procstored</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">localblockid</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ibegor</code>, <code class="vardecl">jbegor</code>, <code class="vardecl">kbegor</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">iendor</code>, <code class="vardecl">jendor</code>, <code class="vardecl">kendor</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">mass</code>, <code class="vardecl">len</code>, <code class="vardecl">time</code>, <code class="vardecl">temp</code>, <code class="vardecl">angle</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">gridunitsspecified</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">) </code>:: <code class="vardecl">lref</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">familyid</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">il</code>, <code class="vardecl">jl</code>, <code class="vardecl">kl</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nx</code>, <code class="vardecl">ny</code>, <code class="vardecl">nz</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">n1to1</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">n1to1general</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nnonmatchabutting</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">noverset</code>, <code class="vardecl">ncellsoverset</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nholes</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">nbocos</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">rotatingframespecified</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotcenter</code>, <code class="vardecl">rotrate</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSBLOCKINFOTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the family.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Type of the boundary condition and family BC name.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the CGNS user defined data node if the CGNS</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! boundary condition is UserDefined.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The number of the sliding mesh interface of which this</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! family is part. 0 means that this family is not part of a</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! sliding mesh interface. This value can be positive and</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! negative in order to distinguish between the two sides of the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! interface. The absolute value is the actual ID of the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! interface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The number of the bleed flow region of which this family is</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! part. 0 means that this family does not belong to a bleed</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! flow region. There is no need to distinguish between an</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! inflow and an outflow bleed, because they have different</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! boundary conditions.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not the mass flow must be monitored for this family.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of boundary condition datasets for this family.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The actual boundary condition data sets.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsBCDatasetType), pointer, dimension(:) :: dataSet</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not a rotating frame is specified.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The corresponding rotation center and rotation rate.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * The definition of the derived data type to store the data of a *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * cgns family.                                                   *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE </code><code class="typename">CGNSFAMILYTYPE</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">familyname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">bctypecgns</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">bctype</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">bcname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">userdefinedname</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">slidingid</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">bleedregionid</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">monitormassflow</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">ndataset</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">rotatingframespecified</code></a>
      <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code><code class="typename">) </code>:: <code class="vardecl">rotcenter</code>, <code class="vardecl">rotrate</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END TYPE </code>CGNSFAMILYTYPE</a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      * Definition of the variables stored in this module.             *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Dimensions of the cell and of the physical dimensions.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Both should be 3 for this code. Note that these are integers</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! and not integers(kind=intType).</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER </code>:: <code class="vardecl">cgnscelldim</code>, <code class="vardecl">cgnsphysdim</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of blocks (zones) in the cgns grid.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">cgnsndom</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of cgns blocks.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">TYPE(CGNSBLOCKINFOTYPE)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="vardecl">cgnsdoms</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">TYPE(</code><code class="typename">CGNSBLOCKINFOTYPE</code><code class="keyword">)</code>, DIMENSION(:), <code class="typename">ALLOCATABLE </code>:: <code class="vardecl">cgnsdomsd</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of families in the cgns grid.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">cgnsnfamilies</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Array of families.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!type(cgnsFamilyType), allocatable, dimension(:) :: cgnsFamilies</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of sliding mesh interfaces in the grid.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">cgnsnsliding</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The corresponding family ID's of the sliding interfaces.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="vardecl">famidssliding</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Number of domain interfaces, i.e. interfaces with other CFD</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! codes, in the grid.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">cgnsndomaininterfaces</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! The family and BC ID's of the domain interfaces.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="label">&</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="label">&  </code><code class="vardecl">famidsdomaininterfaces</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="label">&</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="label">&  </code><code class="vardecl">bcidsdomaininterfaces</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Name of the cgns base.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">CHARACTER</code>(<code class="keyword">len</code>=maxcgnsnamelen) :: <code class="vardecl">cgnsbasename</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! Whether or not there are overset grids present.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">LOGICAL </code>:: <code class="vardecl">oversetpresent</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! massFlowFamilyInv(:,:):  Array to store the local contributions</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          from the central part of the flux to</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          the mass flow of a family and the</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          sliding mesh interfaces. Dimension is</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          (0:nn,nTimeIntervalsSpectral, where</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          nn is the number of families for which</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          the mass flow must be monitored plus</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          2*cgnsNSliding (if the mass flow through</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          the sliding interfaces must be monitored).</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          The reason for 2*cgnsNSliding is that each</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          side of a sliding interface is monitored.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          The first index starts at 0 to store</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          all the faces that are not on a</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">!                          sliding interface.</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="comment">! massFlowFamilyDiss(:,:): Idem for the dissipative part.</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="vardecl">massflowfamilyinv</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, DIMENSION(:, :), <code class="typename">ALLOCATABLE </code>:: <code class="label">&</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="label">&  </code><code class="vardecl">massflowfamilyinvd</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">ALLOCATABLE </code>:: <code class="label">&</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="label">&  </code><code class="vardecl">massflowfamilydiss</code></a>
  <a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, DIMENSION(:, :), <code class="typename">ALLOCATABLE </code>:: <code class="label">&</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="label">&  </code><code class="vardecl">massflowfamilydissd</code></a>
<a href="cgnsgrid_p.html#cgnsgrid" target="origFile"><code class="keyword">END MODULE </code><code class="funcname">CGNSGRID_SPATIAL_D</code></a>
</pre>
</body>
