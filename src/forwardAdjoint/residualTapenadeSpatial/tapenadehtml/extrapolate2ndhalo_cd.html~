<title>Generated by TAPENADE</title>
<link type="text/CSS" rel="stylesheet" href="tapenade.css">
<link type="text/CSS" rel="stylesheet" href="fortranStyle.css">
<body>
<pre><a name="extrapolate2ndhalo_cd"></a><a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!        Generated by TAPENADE     (INRIA, Tropics team)</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!  Tapenade 3.4 (r3375) - 10 Feb 2010 15:08</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * File:          extrapolate2ndHalo.f90                          *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * Author:        Edwin van der Weide                             *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * Starting date: 03-10-2003                                      *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * Last modified: 06-12-2005                                      *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">EXTRAPOLATE2NDHALO_CD</code>(<code class="vardecl">nn</code>, <code class="vardecl">correctfork</code>)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">USE </code><code class="funcname">BCTYPES_SPATIAL_D</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">USE </code><code class="funcname">INPUTPHYSICS_SPATIAL_D</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">USE </code><code class="funcname">ITERATION_SPATIAL_D</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">USE </code><code class="funcname">CONSTANTS_SPATIAL_D</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">USE </code><code class="funcname">BLOCKPOINTERS_SPATIAL_D</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">USE </code><code class="funcname">FLOWVARREFSTATE_SPATIAL_D</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IMPLICIT NONE</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * extrapolate2ndHalo determines the states of the second layer   *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * halo cells for the given subface of the block. It is assumed   *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * that the pointers in blockPointers are already set to the      *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * correct block on the correct grid level.                       *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      Subroutine arguments.</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nn</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">LOGICAL</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">correctfork</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      Local parameter.</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">PARAMETER </code>:: <code class="vardecl">factor</code>=<code class="constant">0.5_realType</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      Local variables.</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">) </code>:: <code class="vardecl">i</code>, <code class="vardecl">j</code>, <code class="vardecl">l</code>, <code class="vardecl">idim</code>, <code class="vardecl">ddim</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code><code class="constant">3</code>, <code class="constant">2</code><code class="typename">) </code>:: <code class="vardecl">crange</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ww0</code>, <code class="vardecl">ww1</code>, <code class="vardecl">ww2</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">pp0</code>, <code class="vardecl">pp1</code>, <code class="vardecl">pp2</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rlv0</code>, <code class="vardecl">rlv1</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rev0</code>, <code class="vardecl">rev1</code></a>
<a name="setbcpointers_cd0"></a>  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">INTRINSIC </code><code class="funcname">MAX</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">INTERFACE </code></a>
      <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="keyword">SUBROUTINE </code><code class="funcname">SETBCPOINTERS_CD0</code>(<code class="vardecl">nn</code>, <code class="vardecl">ww1</code>, <code class="vardecl">ww2</code>, <code class="vardecl">pp1</code>, <code class="vardecl">pp2</code>, <code class="vardecl">rlv1</code>, <code class="vardecl">rlv2</code>, <code class="label">&</code></a>
<a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="label">&        </code><code class="vardecl">rev1</code>, <code class="vardecl">rev2</code>, <code class="vardecl">offset</code>)</a>
        <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="keyword">USE </code><code class="funcname">BLOCKPOINTERS_SPATIAL_D</code></a>
        <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="typename">INTEGER(</code><code class="keyword">kind</code>=<code class="modifier">inttype</code><code class="typename">)</code>, <code class="typename">INTENT(IN) </code>:: <code class="vardecl">nn</code>, <code class="vardecl">offset</code></a>
        <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">ww1</code>, <code class="vardecl">ww2</code></a>
        <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">pp1</code>, <code class="vardecl">pp2</code></a>
        <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rlv1</code>, <code class="vardecl">rlv2</code></a>
        <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="typename">REAL(</code><code class="keyword">kind</code>=<code class="modifier">realtype</code><code class="typename">)</code>, <code class="typename">DIMENSION(</code>:, :<code class="typename">)</code>, <code class="typename">POINTER </code>:: <code class="vardecl">rev1</code>, <code class="vardecl">rev2</code></a>
      <a href="extrapolate2ndhalo_p.html#setbcpointers" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">SETBCPOINTERS_CD0</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END INTERFACE</code></a>

<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      * Begin execution                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      *                                                                *</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!      ******************************************************************</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Nullify the pointers and set them to the correct subface.</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! They are nullified first, because some compilers require that.</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Note that rlv0 and rev0 are used here as dummies.</code></a>
<a name="p24"></a><a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">!nullify(ww1, ww2, pp1, pp2, rlv1, rlv0, rev1, rev0)</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CALL </code><code class="funcname">SETBCPOINTERS_CD0</code>(nn, ww1, ww2, pp1, pp2, rlv1, rlv0, rev1, rev0<code class="label">&</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="label">&                   </code>, </a><a href="msg.html#p24" target="msg"><code class="comment"><img src="danger.gif" align=middle border=0 alt="!" /></code></a><a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="constant">0_intType</code>)</a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Set a couple of additional variables needed for the</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! extrapolation. This depends on the block face on which the</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! subface is located.</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">SELECT CASE </code> (bcfaceid(nn)) </a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CASE </code>(imin) </a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0 => w(<code class="constant">0</code>, <code class="constant">1</code>:, <code class="constant">1</code>:, :)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0 => p(<code class="constant">0</code>, <code class="constant">1</code>:, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rlv0 => rlv(<code class="constant">0</code>, <code class="constant">1</code>:, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rev0 => rev(<code class="constant">0</code>, <code class="constant">1</code>:, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">idim = <code class="constant">1</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ddim = <code class="constant">0</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CASE </code>(imax) </a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0 => w(ib, <code class="constant">1</code>:, <code class="constant">1</code>:, :)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0 => p(ib, <code class="constant">1</code>:, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rlv0 => rlv(ib, <code class="constant">1</code>:, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rev0 => rev(ib, <code class="constant">1</code>:, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">idim = <code class="constant">1</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ddim = ib</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CASE </code>(jmin) </a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0 => w(<code class="constant">1</code>:, <code class="constant">0</code>, <code class="constant">1</code>:, :)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0 => p(<code class="constant">1</code>:, <code class="constant">0</code>, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rlv0 => rlv(<code class="constant">1</code>:, <code class="constant">0</code>, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rev0 => rev(<code class="constant">1</code>:, <code class="constant">0</code>, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">idim = <code class="constant">2</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ddim = <code class="constant">0</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CASE </code>(jmax) </a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0 => w(<code class="constant">1</code>:, jb, <code class="constant">1</code>:, :)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0 => p(<code class="constant">1</code>:, jb, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rlv0 => rlv(<code class="constant">1</code>:, jb, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rev0 => rev(<code class="constant">1</code>:, jb, <code class="constant">1</code>:)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">idim = <code class="constant">2</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ddim = jb</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CASE </code>(kmin) </a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0 => w(<code class="constant">1</code>:, <code class="constant">1</code>:, <code class="constant">0</code>, :)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0 => p(<code class="constant">1</code>:, <code class="constant">1</code>:, <code class="constant">0</code>)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rlv0 => rlv(<code class="constant">1</code>:, <code class="constant">1</code>:, <code class="constant">0</code>)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rev0 => rev(<code class="constant">1</code>:, <code class="constant">1</code>:, <code class="constant">0</code>)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">idim = <code class="constant">3</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ddim = <code class="constant">0</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CASE </code>(kmax) </a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0 => w(<code class="constant">1</code>:, <code class="constant">1</code>:, kb, :)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0 => p(<code class="constant">1</code>:, <code class="constant">1</code>:, kb)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rlv0 => rlv(<code class="constant">1</code>:, <code class="constant">1</code>:, kb)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) <code class="keyword">THEN</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">rev0 => rev(<code class="constant">1</code>:, <code class="constant">1</code>:, kb)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">idim = <code class="constant">3</code></a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ddim = kb</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END SELECT</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Loop over the generic subface to set the state in the halo's.</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">DO </code>j=bcdata(nn)%jcbeg,bcdata(nn)%jcend</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">DO </code>i=bcdata(nn)%icbeg,bcdata(nn)%icend</a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Extrapolate the density, momentum and pressure.</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Make sure that a certain threshold is kept.</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, irho) = two*ww1(i, j, irho) - ww2(i, j, irho)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (factor*ww1(i, j, irho) .LT. ww0(i, j, irho)) <code class="keyword">THEN</code></a>
        <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, irho) = ww0(i, j, irho)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, irho) = factor*ww1(i, j, irho)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, ivx) = two*ww1(i, j, ivx) - ww2(i, j, ivx)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, ivy) = two*ww1(i, j, ivy) - ww2(i, j, ivy)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, ivz) = two*ww1(i, j, ivz) - ww2(i, j, ivz)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (factor*pp1(i, j) .LT. two*pp1(i, j) - pp2(i, j)) <code class="keyword">THEN</code></a>
        <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0(i, j) = two*pp1(i, j) - pp2(i, j)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">ELSE</code></a>
        <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">pp0(i, j) = factor*pp1(i, j)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END IF</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Extrapolate the turbulent variables. Use constant</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! extrapolation.</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">DO </code>l=nt1mg,nt2mg</a>
        <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">ww0(i, j, l) = ww1(i, j, l)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END DO</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! The laminar and eddy viscosity, if present. These values</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! are simply taken constant. Their values do not matter.</code></a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (viscous) rlv0(i, j) = rlv1(i, j)</a>
      <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">IF</code> (eddymodel) rev0(i, j) = rev1(i, j)</a>
    <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END DO</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END DO</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Set the range for the halo cells for the energy computation.</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(<code class="constant">1</code>, <code class="constant">1</code>) = icbeg(nn)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(<code class="constant">1</code>, <code class="constant">2</code>) = icend(nn)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(<code class="constant">2</code>, <code class="constant">1</code>) = jcbeg(nn)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(<code class="constant">2</code>, <code class="constant">2</code>) = jcend(nn)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(<code class="constant">3</code>, <code class="constant">1</code>) = kcbeg(nn)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(<code class="constant">3</code>, <code class="constant">2</code>) = kcend(nn)</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(idim, <code class="constant">1</code>) = ddim</a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile">crange(idim, <code class="constant">2</code>) = ddim</a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="comment">! Compute the energy for this halo range.</code></a>
  <a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">CALL </code><code class="funcname">COMPUTEETOT_CD</code>(crange(<code class="constant">1</code>, <code class="constant">1</code>), crange(<code class="constant">1</code>, <code class="constant">2</code>), crange(<code class="constant">2</code>, <code class="constant">1</code>), crange(<code class="constant">2</code><code class="label">&</code></a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="label">&                </code>, <code class="constant">2</code>), crange(<code class="constant">3</code>, <code class="constant">1</code>), crange(<code class="constant">3</code>, <code class="constant">2</code>), correctfork)</a>
<a href="extrapolate2ndhalo_p.html#extrapolate2ndhalo" target="origFile"><code class="keyword">END SUBROUTINE </code><code class="funcname">EXTRAPOLATE2NDHALO_CD</code></a>
</pre>
</body>
