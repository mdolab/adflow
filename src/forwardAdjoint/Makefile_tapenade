#    -*- makefile -*-
#     ******************************************************************
#     *                                                                *
#     * File:          Makefile_tapenade                               *
#     * Author:        Gaetan Kenway                                   *
#     * Starting date: 08-02-2006                                      *
#     * Last modified: 10-24-2014                                      *
#     *                                                                *
#     * This makefile is used to create automatically differentated    *
#     * residual code that can be used to constuct the aerodynamic     *
#     * jacobian. There are three main commands:                       *
#     *                                                                *
#     * ad_forward: Run in forward mode. Preprocessed output is in     *
#     *             'foward' directory                                 *
#     *                                                                *
#     * ad_reverse: Run in reverse mode. Preprocessed output is in the *
#     *             'reverse' directory                                *
#     *                                                                *
#     * The following are commands that are used to produce tangent/   *
#     * adjoint debug code.                                            *
#     *                                                                *
#     ******************************************************************

# Define the required directories
SRC = ..

# Integer, double and real precision (bytes)
TAPENADE_PRECISION = -i4 -dr8 -r8

ALL_RES_FILES =	$(SRC)/forwardAdjoint/residualInput/block_res.F90\
		$(SRC)/forwardAdjoint/residualInput/xhalo_block.F90\
		$(SRC)/forwardAdjoint/residualInput/metric_block.F90\
		$(SRC)/forwardAdjoint/residualInput/viscousFluxApprox.F90\
		$(SRC)/forwardAdjoint/residualInput/inviscidDissFluxScalarApprox.F90\
		$(SRC)/forwardAdjoint/residualInput/inviscidDissFluxMatrixApprox.F90\
		$(SRC)/forwardAdjoint/residualInput/computePressureSimple.F90\
		$(SRC)/forwardAdjoint/residualInput/costFunction2.F90\
		$(SRC)/modules/monitor.f90\
		$(SRC)/modules/diffSizes.f90\
		$(SRC)/modules/block.F90\
		$(SRC)/modules/inputParam.F90\
		$(SRC)/modules/constants.F90 \
		$(SRC)/modules/precision_tapenade.f90\
		$(SRC)/modules/iteration.f90\
		$(SRC)/modules/section.f90\
		$(SRC)/modules/communication.f90\
		$(SRC)/modules/BCTypes.f90\
		$(SRC)/modules/paramTurb.F90\
		$(SRC)/modules/cgnsGrid.f90 \
		$(SRC)/modules/CpCurveFits.f90\
		$(SRC)/modules/blockPointers.F90 \
		$(SRC)/modules/flowVarRefState.F90 \
		$(SRC)/modules/costFunctions.F90\
		$(SRC)/modules/wallDistanceData.F90\
		$(SRC)/solver/inviscidCentralFlux.F90\
		$(SRC)/solver/inviscidDissFluxMatrix.F90\
		$(SRC)/solver/inviscidDissFluxScalar.F90\
		$(SRC)/solver/inviscidUpwindFlux.F90\
		$(SRC)/solver/computeUtau.f90\
		$(SRC)/solver/timeStep.F90\
		$(SRC)/solver/residual.F90\
		$(SRC)/solver/computeLamViscosity.F90\
		$(SRC)/solver/setCoefTimeIntegrator.f90\
		$(SRC)/solver/derivativeRotMatrixRigid.f90\
		$(SRC)/solver/adjustInflowAngle.f90\
		$(SRC)/solver/getDirVector.f90\
		$(SRC)/solver/getDirAngle.f90\
		$(SRC)/solver/vectorRotation.f90\
		$(SRC)/solver/slipVelocities.f90\
		$(SRC)/solver/viscousFlux.F90\
		$(SRC)/solver/utauWF.F90\
		$(SRC)/solver/gridVelocitiesFineLevel.F90\
		$(SRC)/solver/normalVelocities.F90\
		$(SRC)/solver/forcesAndMoments.F90\
		$(SRC)/stabilityDerivatives/computeTSDerivatives.f90\
		$(SRC)/stabilityDerivatives/computeLeastSquaresRegression.f90\
		$(SRC)/initFlow/referenceState.F90\
		$(SRC)/initFlow/setFlowInfinityState.F90\
		$(SRC)/turbulence/computeEddyViscosity.F90\
		$(SRC)/turbulence/curveFit.f90\
		$(SRC)/turbulence/turbBCNSWall.f90\
		$(SRC)/turbulence/turbMod.F90\
		$(SRC)/turbulence/saNuFromEddyRatio.f90\
		$(SRC)/turbulence/saModule.F90\
		$(SRC)/turbulence/prodKatoLaunder.F90\
		$(SRC)/turbulence/prodSmag2.F90\
		$(SRC)/turbulence/prodWmag2.F90\
		$(SRC)/turbulence/turbAdvection.F90\
		$(SRC)/turbulence/unsteadyTurbTerm.f90\
		$(SRC)/turbulence/bcTurbSymm.f90\
		$(SRC)/turbulence/bcTurbWall.F90\
		$(SRC)/turbulence/bcTurbFarfield.f90\
		$(SRC)/turbulence/unsteadyTurbSpectral.f90\
		$(SRC)/turbulence/bcTurbTreatment.F90\
		$(SRC)/turbulence/applyAllTurbBC.F90\
		$(SRC)/turbulence/bcEddyWall.f90\
		$(SRC)/turbulence/bcEddyNoWall.f90\
		$(SRC)/turbulence/turb2ndHalo.f90\
		$(SRC)/utils/rotMatrixRigidBody.f90\
		$(SRC)/utils/computeGamma.f90\
		$(SRC)/utils/TSalpha.f90\
		$(SRC)/utils/TSalphadot.f90\
		$(SRC)/utils/TSBeta.f90\
		$(SRC)/utils/TSMach.f90\
		$(SRC)/utils/rigidRotAngle.f90\
		$(SRC)/utils/derivativeRigidRotAngle.f90\
		$(SRC)/utils/dummy_dim.f90\
		$(SRC)/utils/setPointers.f90\
		$(SRC)/utils/terminate.F90\
		$(SRC)/utils/computeEtot.f90\
		$(SRC)/utils/computeSpeedOfSoundSquared.F90\
		$(SRC)/bendingMomentAnalysis/rootBendingMomentAnalysis.f90\
		$(SRC)/wallDistance/determineDistanceQuickly.F90\
		$(SRC)/solver/BCRoutines.F90\

# intermediate residual files.
I_RES_FILES := $(ALL_RES_FILES:%=%.f90)
# ---------------------------------------------------------------------

#     ******************************************************************
#     *                                                                *
#     * General targets.                                               *
#     *                                                                *
#     ******************************************************************

default: ad_forward

ad_forward:
# First delete the holding directory if it exists
	rm -fr temp_forward

# Next create the holidng directory:
	mkdir -p temp_forward

# Run preprocessor on all input files
	make -f Makefile_tapenade preprocess_forward

# The following is the single Tapenade command to run:
	$(TAPENADE_HOME)/bin/tapenade -html \
	-head "block_res(flowdoms%w flowdoms%x xsurf alpha beta mach machgrid machcoef pointref lengthRef Pref tempFreeStream Reynolds ww0 ww1 ww2 ww3 pp0 pp1 pp2 pp3 rlv0 rlv1 rlv2 rlv3 rev0 rev1 rev2 rev3 ssi ssj ssk ss xx) > \
(flowdoms%dw  bcData%F flowdoms%w flowdoms%x force moment sepSensor Cavitation funcValues) \
xhalo_block(x)>(x)" \
	-forward $(TAPENADE_PRECISION) \
	-O temp_forward $(I_RES_FILES)

# Run the auto-edit file:
	python autoEdit/autoEditForward.py temp_forward outputForward

# Remove preprocessor files
	make -f Makefile_tapenade cleanpreprocess_res

ad_reverse:
# First delete the holding directory if it exists
	rm -fr temp_reverse

# Next create the holidng directory:
	mkdir -p temp_reverse

# Run preprocessor on all input files
	make -f Makefile_tapenade preprocess_reverse

# The following is the single Tapenade command to run:
	$(TAPENADE_HOME)/bin/tapenade -html \
	-head "block_res(flowdoms%w flowdoms%x xsurf alpha beta mach machgrid machcoef pointref lengthRef Pref tempFreeStream Reynolds ww0 ww1 ww2 ww3 pp0 pp1 pp2 pp3 rlv0 rlv1 rlv2 rlv3 rev0 rev1 rev2 rev3 xx ssi) > \
(flowdoms%dw  bcData%F flowdoms%w flowdoms%x force moment sepSensor Cavitation funcValues ww0 ww1 ww2 ww3 pp0 pp1 pp2 pp3 rlv0 rlv1 rlv2 rlv3 rev0 rev1 rev2 rev3 xx ssi) \
xhalo_block(x)>(x)" \
	-adjvarname %d \
	-reverse -msglevel 30 $(TAPENADE_PRECISION) \
	-noisize \
	-O temp_reverse $(I_RES_FILES)

# Run the auto-edit file:
	python autoEdit/autoEditReverse.py temp_reverse outputReverse

# Remove preprocessor files
	make -f Makefile_tapenade cleanpreprocess_res

# Fix the AD bugs
	sed -i 's/do ii1=1,size(viscsubfaced(ii1)%tau, 1)/do ii1=1,size(viscsubfaced)/' outputReverse/forcesandmoments_b.f90

	sed -i 's/do ii1=1,size(bcdatad(ii1)%norm, 1)/do ii1=1,size(bcdata)/' outputReverse/forcesandmoments_b.f90
	sed -i 's/do ii1=size(bcdata(ii1)%norm, 1),1,-1/do ii1=size(bcdata),1,-1/' outputReverse/forcesandmoments_b.f90

	sed -i 's/do ii1=1,size(bcdatad(ii1)%dualarea, 1)/do ii1=1,size(bcdata)/' outputReverse/forcesandmoments_b.f90
	sed -i 's/do ii1=1,size(bcdata(ii1)%dualarea, 1)/do ii1=1,size(bcdata)/' outputReverse/forcesandmoments_b.f90
	sed -i 's/do ii1=size(bcdata(ii1)%dualarea, 1),1,-1/do ii1=size(bcdata),1,-1/' outputReverse/forcesandmoments_b.f90

	sed -i 's/do ii1=1,size(bcdatad(ii1)%f, 1)/do ii1=1,size(bcdata)/' outputReverse/forcesandmoments_b.f90
	sed -i 's/do ii1=1,size(bcdata(ii1)%f, 1)/do ii1=1,size(bcdata)/' outputReverse/forcesandmoments_b.f90
	sed -i 's/do ii1=size(bcdata(ii1)%f, 1),1,-1/do ii1=size(bcdata),1,-1/' outputReverse/forcesandmoments_b.f90

	sed -i 's/do ii1=1,size(bcdata(ii1)%dualarea, 1)/do ii1=1,size(bcdata)/' outputReverse/block_res_b.f90
	sed -i 's/do ii1=size(bcdata(ii1)%dualarea, 1),1,-1/do ii1=size(bcdata),1,-1/' outputReverse/block_res_b.f90

	sed -i 's/do ii1=1,size(bcdata(ii1)%f, 1)/do ii1=1,size(bcdata)/' outputReverse/block_res_b.f90
	sed -i 's/do ii1=size(bcdata(ii1)%f, 1),1,-1/do ii1=size(bcdata),1,-1/' outputReverse/block_res_b.f90

	sed -i 's/do ii1=1,size(bcdatad(ii1)%norm, 1)/do ii1=1,size(bcdatad)/' outputReverse/bcroutines_b.f90

	sed -i 's/end subroutine sa_block_b/deallocate(qq)\nend subroutine sa_block_b/' outputReverse/samodule_b.f90

ad_reverse_fast:
# First delete the holding directory if it exists
	rm -fr temp_reverse_fast

# Next create the holidng directory:
	mkdir -p temp_reverse_fast

# Run preprocessor on all input files
	make -f Makefile_tapenade preprocess_reverse_fast

# The following is the single Tapenade command to run:
	$(TAPENADE_HOME)/bin/tapenade -html \
	-head "\
	inviscidCentralFlux(w, p, dw)>(w, p, dw) \
	inviscidDissFluxScalar(p, w, radi, radj, radk, fw)>(fw, w, p) \
	inviscidDissFluxMatrix(p, w, fw)>(fw, w, p) \
	timeStep_block(w, p, radi, radj, radk)>(p, w, radi, radj, radk) \
	viscousFlux(w, aa, rlv, rev, ux, uy, uz, vx, vy, vz, wx, wy, wz, qx, qy, qz, fw)>(fw, w, rlv, rev, aa) \
	allNodalGradients(aa, w, ux, uy, uz, vx, vy, vz, wx, wy, wz, qx, qy, qz)>\
	         (aa, w, ux, uy, uz, vx, vy, vz, wx, wy, wz, qx, qy, qz) \
	computeSpeedOfSoundSquared(w, p, aa)>(w, p, aa) \
	computeLamViscosity(w, p, rlv)>(w, p, rlv) \
	BCRoutines%bcNSWallAdiabatic(ww0, ww1, ww2, pp0, pp1, pp2, rlv0, rlv1, rlv2, rev0, rev1, rev2)>\
	                            (ww0, ww1, ww2, pp0, pp1, pp2, rlv0, rlv1, rlv2, rev0, rev1, rev2) \
	BCRoutines%bcNSWallIsothermal(ww0, ww1, ww2, pp0, pp1, pp2, rlv0, rlv1, rlv2, rev0, rev1, rev2)>\
	                             (ww0, ww1, ww2, pp0, pp1, pp2, rlv0, rlv1, rlv2, rev0, rev1, rev2) \
	BCRoutines%bcFarField(ww0, ww1, ww2, pp0, pp1, pp2, rlv0, rlv1, rlv2, rev0, rev1, rev2)>\
			     (ww0, ww1, ww2, pp0, pp1, pp2, rlv0, rlv1, rlv2, rev0, rev1, rev2) \
	BCRoutines%bcSymm(ww0, ww1, ww2, ww3, pp0, pp1, pp2, pp3, rlv0, rlv1, rlv2, rlv3, rev0, rev1, rev2, rev3)>\
			 (ww0, ww1, ww2, ww3, pp0, pp1, pp2, pp3, rlv0, rlv1, rlv2, rlv3, rev0, rev1, rev2, rev3) \
	BCRoutines%bcEulerWall(ww0, ww1, ww2, ww3, pp0, pp1, pp2, pp3, rlv0, rlv1, rlv2, rlv3, rev0, rev1, rev2, rev3)>\
			      (ww0, ww1, ww2, ww3, pp0, pp1, pp2, pp3, rlv0, rlv1, rlv2, rlv3, rev0, rev1, rev2, rev3) \
	computePressureSimple(w, p)>(w,p) \
	prodsmag2(w,scratch)>(w, scratch) \
	prodwmag2(w,scratch)>(w, scratch) \
	prodKatoLaunder(w,scratch)>(w, scratch) \
	saModule%saSource(scratch,w,rlv)>(scratch,w,rlv) \
	saModule%saViscous(scratch, w,rlv)>(scratch,w,rlv) \
	saModule%saResScale(scratch)>(dw) \
	saEddyViscosity(w,rlv)>(w,rlv,rev) \
	turbAdvection(w,scratch)>(w,scratch)" \
	-adjvarname %d \
	-adjfuncname %_fast_b \
	-reverse $(TAPENADE_PRECISION) \
	-noisize \
	-O temp_reverse_fast $(I_RES_FILES)

# Run the auto-edit file:
	python autoEdit/autoEditReverseFast.py temp_reverse_fast outputReverseFast

# Remove preprocessor files
	make -f Makefile_tapenade cleanpreprocess_res


ad_reverse_spatial:
# First delete the holding directory if it exists
	rm -fr temp_reverse_spatial

# Next create the holidng directory:
	mkdir -p temp_reverse_spatial

# Run preprocessor on all input files
	make -f Makefile_tapenade preprocess_reverse_fast

# The following is the single Tapenade command to run:
	$(TAPENADE_HOME)/bin/tapenade -html \
	-head "\
	inviscidCentralFlux(vol, si, sj, sk)>(vol, si, sj, sk, dw) \
	inviscidDissFluxScalar(radi, radj, radk, fw)>(fw, radi, radj, radk) \
	timeStep_block(si, sj, sk, radi, radj, radk)>(si, sj, sk, radi, radj, radk) \
	viscousFlux(ux, uy, uz, vx, vy, vz, wx, wy, wz, qx, qy, qz, fw, x, si, sj, sk)>(fw, x, si, sj, sk) \
	allNodalGradients(x, vol, si, sj, sk)>(x, vol, si, sj, sk, ux, uy, uz, vx, vy, vz, wx, wy, wz, qx, qy, qz) \
	prodsmag2(vol, si, sj, sk, scratch)>(vol, si, sj, sk, scratch) \
	prodwmag2(vol, si, sj, sk, scratch)>(vol, si, sj, sk, scratch) \
	prodKatoLaunder(vol, si, sj, sk, scratch)>(vol, si, sj, sk, scratch) \
	saModule%saSource(scratch,d2wall)>(scratch,d2wall) \
	saModule%saViscous(scratch, vol, si, sj, sk)>(scratch, vol, si, sj, sk) \
	saModule%saResScale(scratch, vol)>(dw) \
	resScale(dw, fw, vol)>(dw) \
	BCRoutines%bcSymm(ww2, ww3, pp2, pp3, rlv2, rlv3, rev2, rev3 bcData%norm)>\
			 (ww0, ww1, pp0, pp1, rlv0, rlv1, rev0, rev1) \
	turbAdvection(vol, si, sj, sk, scratch)>(scratch, vol, si, sj, sk)" \
	-adjvarname %d \
	-adjfuncname %_spatial_b \
	-reverse $(TAPENADE_PRECISION) \
	-noisize \
	-O temp_reverse_spatial $(I_RES_FILES)

# Run the auto-edit file:
	python autoEdit/autoEditReverseSpatial.py temp_reverse_spatial outputReverseSpatial

# Remove preprocessor files
	make -f Makefile_tapenade cleanpreprocess_res


preprocess_forward:
	@echo "Preprocessing all input files for forward mode AD..."
	@for file in $(ALL_RES_FILES); do \
		echo Preprocessing $$file; \
		cpp -DUSE_TAPENADE -DTAPENADE_FORWARD -traditional -P  $$file $$file.f90; \
	done

preprocess_reverse:
	@echo "Preprocessing all input files for reverse mode AD..."
	@for file in $(ALL_RES_FILES); do \
		echo Preprocessing $$file; \
		cpp -DUSE_TAPENADE -DTAPENADE_REVERSE -DTAPENADE_FAST -traditional -P $(FF90_ALL_FLAGS) $$file $$file.f90; \
	done

preprocess_reverse_fast:
	@echo "Preprocessing all input files for reverse mode AD..."
	@for file in $(ALL_RES_FILES); do \
		echo Preprocessing $$file; \
		cpp -DUSE_TAPENADE -DTAPENADE_REVERSE -DTAPENADE_FAST -DTAPENADE_POINTERS -traditional -P $(FF90_ALL_FLAGS) $$file $$file.f90; \
	done

cleanpreprocess_res:
	@echo "Cleaning up residual preprocessed files..."
	@for file in $(ALL_RES_FILES); do \
		rm $$file.f90; \
	done

all:	 default

clean:
	@echo " Making clean ... "
	@for subdir in $(TAPENADE_OUT_DIRS) ; \
		do \
			echo; \
			echo "making $@ in $$subdir"; \
			echo; \
			(cd $$subdir && rm -f *_b.f90 *_d.f90  *.msg *~) || exit 1; \
		done
